/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as DashboardUserManagementUsersRouteImport } from './routes/dashboard/user-management/users'
import { Route as DashboardUserManagementRolesRouteImport } from './routes/dashboard/user-management/roles'
import { Route as DashboardUserManagementPermissionsRouteImport } from './routes/dashboard/user-management/permissions'
import { ServerRoute as ApiUsersServerRouteImport } from './routes/api.users'
import { ServerRoute as ApiRolesServerRouteImport } from './routes/api.roles'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'
import { ServerRoute as ApiAuthGetSessionServerRouteImport } from './routes/api.auth.get-session'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'
import { ServerRoute as ApiAuthSignUpEmailServerRouteImport } from './routes/api.auth.sign-up.email'
import { ServerRoute as ApiAuthSignInEmailServerRouteImport } from './routes/api.auth.sign-in.email'

const rootServerRouteImport = createServerRootRoute()

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserManagementUsersRoute =
  DashboardUserManagementUsersRouteImport.update({
    id: '/user-management/users',
    path: '/user-management/users',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementRolesRoute =
  DashboardUserManagementRolesRouteImport.update({
    id: '/user-management/roles',
    path: '/user-management/roles',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementPermissionsRoute =
  DashboardUserManagementPermissionsRouteImport.update({
    id: '/user-management/permissions',
    path: '/user-management/permissions',
    getParentRoute: () => DashboardRoute,
  } as any)
const ApiUsersServerRoute = ApiUsersServerRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRolesServerRoute = ApiRolesServerRouteImport.update({
  id: '/api/roles',
  path: '/api/roles',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthGetSessionServerRoute = ApiAuthGetSessionServerRouteImport.update({
  id: '/api/auth/get-session',
  path: '/api/auth/get-session',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignUpEmailServerRoute =
  ApiAuthSignUpEmailServerRouteImport.update({
    id: '/api/auth/sign-up/email',
    path: '/api/auth/sign-up/email',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthSignInEmailServerRoute =
  ApiAuthSignInEmailServerRouteImport.update({
    id: '/api/auth/sign-in/email',
    path: '/api/auth/sign-in/email',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/roles': typeof ApiRolesServerRoute
  '/api/users': typeof ApiUsersServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/get-session': typeof ApiAuthGetSessionServerRoute
  '/api/auth/sign-in/email': typeof ApiAuthSignInEmailServerRoute
  '/api/auth/sign-up/email': typeof ApiAuthSignUpEmailServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/roles': typeof ApiRolesServerRoute
  '/api/users': typeof ApiUsersServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/get-session': typeof ApiAuthGetSessionServerRoute
  '/api/auth/sign-in/email': typeof ApiAuthSignInEmailServerRoute
  '/api/auth/sign-up/email': typeof ApiAuthSignUpEmailServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/roles': typeof ApiRolesServerRoute
  '/api/users': typeof ApiUsersServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/get-session': typeof ApiAuthGetSessionServerRoute
  '/api/auth/sign-in/email': typeof ApiAuthSignInEmailServerRoute
  '/api/auth/sign-up/email': typeof ApiAuthSignUpEmailServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/demo-names'
    | '/api/roles'
    | '/api/users'
    | '/api/auth/$'
    | '/api/auth/get-session'
    | '/api/auth/sign-in/email'
    | '/api/auth/sign-up/email'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/demo-names'
    | '/api/roles'
    | '/api/users'
    | '/api/auth/$'
    | '/api/auth/get-session'
    | '/api/auth/sign-in/email'
    | '/api/auth/sign-up/email'
  id:
    | '__root__'
    | '/api/demo-names'
    | '/api/roles'
    | '/api/users'
    | '/api/auth/$'
    | '/api/auth/get-session'
    | '/api/auth/sign-in/email'
    | '/api/auth/sign-up/email'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiRolesServerRoute: typeof ApiRolesServerRoute
  ApiUsersServerRoute: typeof ApiUsersServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiAuthGetSessionServerRoute: typeof ApiAuthGetSessionServerRoute
  ApiAuthSignInEmailServerRoute: typeof ApiAuthSignInEmailServerRoute
  ApiAuthSignUpEmailServerRoute: typeof ApiAuthSignUpEmailServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user-management/users': {
      id: '/dashboard/user-management/users'
      path: '/user-management/users'
      fullPath: '/dashboard/user-management/users'
      preLoaderRoute: typeof DashboardUserManagementUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/roles': {
      id: '/dashboard/user-management/roles'
      path: '/user-management/roles'
      fullPath: '/dashboard/user-management/roles'
      preLoaderRoute: typeof DashboardUserManagementRolesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/permissions': {
      id: '/dashboard/user-management/permissions'
      path: '/user-management/permissions'
      fullPath: '/dashboard/user-management/permissions'
      preLoaderRoute: typeof DashboardUserManagementPermissionsRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/roles': {
      id: '/api/roles'
      path: '/api/roles'
      fullPath: '/api/roles'
      preLoaderRoute: typeof ApiRolesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/get-session': {
      id: '/api/auth/get-session'
      path: '/api/auth/get-session'
      fullPath: '/api/auth/get-session'
      preLoaderRoute: typeof ApiAuthGetSessionServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/sign-up/email': {
      id: '/api/auth/sign-up/email'
      path: '/api/auth/sign-up/email'
      fullPath: '/api/auth/sign-up/email'
      preLoaderRoute: typeof ApiAuthSignUpEmailServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/sign-in/email': {
      id: '/api/auth/sign-in/email'
      path: '/api/auth/sign-in/email'
      fullPath: '/api/auth/sign-in/email'
      preLoaderRoute: typeof ApiAuthSignInEmailServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardUserManagementPermissionsRoute: typeof DashboardUserManagementPermissionsRoute
  DashboardUserManagementRolesRoute: typeof DashboardUserManagementRolesRoute
  DashboardUserManagementUsersRoute: typeof DashboardUserManagementUsersRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardUserManagementPermissionsRoute:
    DashboardUserManagementPermissionsRoute,
  DashboardUserManagementRolesRoute: DashboardUserManagementRolesRoute,
  DashboardUserManagementUsersRoute: DashboardUserManagementUsersRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiRolesServerRoute: ApiRolesServerRoute,
  ApiUsersServerRoute: ApiUsersServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiAuthGetSessionServerRoute: ApiAuthGetSessionServerRoute,
  ApiAuthSignInEmailServerRoute: ApiAuthSignInEmailServerRoute,
  ApiAuthSignUpEmailServerRoute: ApiAuthSignUpEmailServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
