/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketplaceIndexRouteImport } from './routes/marketplace/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as MarketplaceRequestsRouteImport } from './routes/marketplace/requests'
import { Route as MarketplaceMyListingsRouteImport } from './routes/marketplace/my-listings'
import { Route as MarketplaceMessagesRouteImport } from './routes/marketplace/messages'
import { Route as MarketplaceFavoritesRouteImport } from './routes/marketplace/favorites'
import { Route as MarketplaceCreateRouteImport } from './routes/marketplace/create'
import { Route as MarketplaceBrowseRouteImport } from './routes/marketplace/browse'
import { Route as DashboardStorageSettingsRouteImport } from './routes/dashboard/storage-settings'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardRequestsRouteImport } from './routes/dashboard/requests'
import { Route as DashboardParentRouteImport } from './routes/dashboard/parent'
import { Route as DashboardFileManagerRouteImport } from './routes/dashboard/file-manager'
import { Route as DashboardEmailRouteImport } from './routes/dashboard/email'
import { Route as DashboardBrandingRouteImport } from './routes/dashboard/branding'
import { Route as DashboardAccountRouteImport } from './routes/dashboard/account'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthPendingRouteImport } from './routes/auth/pending'
import { Route as DashboardUserManagementIndexRouteImport } from './routes/dashboard/user-management/index'
import { Route as DashboardSpipuniformIndexRouteImport } from './routes/dashboard/spipuniform/index'
import { Route as DashboardProfileIndexRouteImport } from './routes/dashboard/profile/index'
import { Route as MarketplaceRequestsIdRouteImport } from './routes/marketplace/requests/$id'
import { Route as MarketplaceListingsIdRouteImport } from './routes/marketplace/listings/$id'
import { Route as DashboardUserManagementUsersRouteImport } from './routes/dashboard/user-management/users'
import { Route as DashboardUserManagementRolesRouteImport } from './routes/dashboard/user-management/roles'
import { Route as DashboardUserManagementPermissionsRouteImport } from './routes/dashboard/user-management/permissions'
import { Route as DashboardUserManagementConsolidatedRouteImport } from './routes/dashboard/user-management/consolidated'
import { Route as DashboardSpipuniformShopRouteImport } from './routes/dashboard/spipuniform/shop'
import { Route as DashboardSpipuniformSchoolsRouteImport } from './routes/dashboard/spipuniform/schools'
import { Route as DashboardSpipuniformSchoolStockRouteImport } from './routes/dashboard/spipuniform/school-stock'
import { Route as DashboardSpipuniformDataVerificationRouteImport } from './routes/dashboard/spipuniform/data-verification'
import { Route as DashboardProfileShopOldRouteImport } from './routes/dashboard/profile/shop-old'
import { Route as DashboardProfileShopRouteImport } from './routes/dashboard/profile/shop'
import { Route as DashboardProfileFamilyRouteImport } from './routes/dashboard/profile/family'
import { Route as DashboardSpipuniformProductsTypesRouteImport } from './routes/dashboard/spipuniform/products/types'
import { Route as DashboardSpipuniformProductsConditionsRouteImport } from './routes/dashboard/spipuniform/products/conditions'
import { Route as DashboardSpipuniformProductsCategoriesRouteImport } from './routes/dashboard/spipuniform/products/categories'
import { Route as DashboardSpipuniformProductsAttributesRouteImport } from './routes/dashboard/spipuniform/products/attributes'
import { ServerRoute as ApiUsersApprovalServerRouteImport } from './routes/api/users-approval'
import { ServerRoute as ApiUserProfileServerRouteImport } from './routes/api/user-profile'
import { ServerRoute as ApiUserFilesServerRouteImport } from './routes/api/user-files'
import { ServerRoute as ApiUploadServerRouteImport } from './routes/api/upload'
import { ServerRoute as ApiTestServerRouteImport } from './routes/api/test'
import { ServerRoute as ApiShopsServerRouteImport } from './routes/api/shops'
import { ServerRoute as ApiShopOptionsServerRouteImport } from './routes/api/shop-options'
import { ServerRoute as ApiSchoolsServerRouteImport } from './routes/api/schools'
import { ServerRoute as ApiSchoolSubmissionsServerRouteImport } from './routes/api/school-submissions'
import { ServerRoute as ApiSchoolSetupRequestsServerRouteImport } from './routes/api/school-setup-requests'
import { ServerRoute as ApiSchoolApprovalRequestsServerRouteImport } from './routes/api/school-approval-requests'
import { ServerRoute as ApiRequestsServerRouteImport } from './routes/api/requests'
import { ServerRoute as ApiReportsServerRouteImport } from './routes/api/reports'
import { ServerRoute as ApiProductCategoriesServerRouteImport } from './routes/api/product-categories'
import { ServerRoute as ApiMeServerRouteImport } from './routes/api/me'
import { ServerRoute as ApiLocalitiesServerRouteImport } from './routes/api/localities'
import { ServerRoute as ApiListingsServerRouteImport } from './routes/api/listings'
import { ServerRoute as ApiFilesServerRouteImport } from './routes/api/files'
import { ServerRoute as ApiFavoritesServerRouteImport } from './routes/api/favorites'
import { ServerRoute as ApiFamilyMembersServerRouteImport } from './routes/api/family-members'
import { ServerRoute as ApiCredentialsServerRouteImport } from './routes/api/credentials'
import { ServerRoute as ApiCountiesServerRouteImport } from './routes/api/counties'
import { ServerRoute as ApiConditionsServerRouteImport } from './routes/api/conditions'
import { ServerRoute as ApiChangePasswordServerRouteImport } from './routes/api/change-password'
import { ServerRoute as ApiAvatarServerRouteImport } from './routes/api/avatar'
import { ServerRoute as ApiAuthSettingsServerRouteImport } from './routes/api/auth-settings'
import { ServerRoute as ApiUsersIndexServerRouteImport } from './routes/api/users/index'
import { ServerRoute as ApiTransactionsIndexServerRouteImport } from './routes/api/transactions/index'
import { ServerRoute as ApiRolesIndexServerRouteImport } from './routes/api/roles/index'
import { ServerRoute as ApiProductTypesIndexServerRouteImport } from './routes/api/product-types/index'
import { ServerRoute as ApiEmailIndexServerRouteImport } from './routes/api/email/index'
import { ServerRoute as ApiBrandingIndexServerRouteImport } from './routes/api/branding/index'
import { ServerRoute as ApiUsersActionsServerRouteImport } from './routes/api/users/actions'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users/$userId'
import { ServerRoute as ApiTransactionsIdServerRouteImport } from './routes/api/transactions/$id'
import { ServerRoute as ApiStorageSettingsServerRouteImport } from './routes/api/storage/settings'
import { ServerRoute as ApiSchoolsIdServerRouteImport } from './routes/api/schools/$id'
import { ServerRoute as ApiRolesSeedServerRouteImport } from './routes/api/roles/seed'
import { ServerRoute as ApiRolesRoleIdServerRouteImport } from './routes/api/roles/$roleId'
import { ServerRoute as ApiRequestsIdServerRouteImport } from './routes/api/requests/$id'
import { ServerRoute as ApiProfilesShopServerRouteImport } from './routes/api.profiles.shop'
import { ServerRoute as ApiProfilesFamilyMembersServerRouteImport } from './routes/api.profiles.familyMembers'
import { ServerRoute as ApiMarketplaceSearchServerRouteImport } from './routes/api/marketplace/search'
import { ServerRoute as ApiLocalitiesSplatServerRouteImport } from './routes/api/localities/$'
import { ServerRoute as ApiListingsIdServerRouteImport } from './routes/api/listings/$id'
import { ServerRoute as ApiFamilyMembersIdServerRouteImport } from './routes/api/family-members/$id'
import { ServerRoute as ApiEmailTestServerRouteImport } from './routes/api/email/test'
import { ServerRoute as ApiEmailTemplatesServerRouteImport } from './routes/api/email/templates'
import { ServerRoute as ApiEmailSettingsServerRouteImport } from './routes/api/email/settings'
import { ServerRoute as ApiEmailLogsServerRouteImport } from './routes/api/email/logs'
import { ServerRoute as ApiEmailFragmentsServerRouteImport } from './routes/api/email/fragments'
import { ServerRoute as ApiBrandingActiveServerRouteImport } from './routes/api/branding/active'
import { ServerRoute as ApiAuthUpgradeFirstAdminServerRouteImport } from './routes/api/auth/upgrade-first-admin'
import { ServerRoute as ApiAuthSignupPostHookServerRouteImport } from './routes/api/auth/signup-post-hook'
import { ServerRoute as ApiAuthRolesPublicServerRouteImport } from './routes/api/auth/roles-public'
import { ServerRoute as ApiAuthPermissionsServerRouteImport } from './routes/api/auth/permissions'
import { ServerRoute as ApiAuthAdminExistsServerRouteImport } from './routes/api/auth/admin-exists'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'
import { ServerRoute as ApiAuthSettingsFlagServerRouteImport } from './routes/api/auth-settings.flag'
import { ServerRoute as ApiAdminDashboardStatsServerRouteImport } from './routes/api/admin/dashboard-stats'
import { ServerRoute as ApiAdminAnalyticsServerRouteImport } from './routes/api/admin/analytics'
import { ServerRoute as ApiSpipuniformShopsIndexServerRouteImport } from './routes/api/spipuniform/shops/index'
import { ServerRoute as ApiSpipuniformSchoolsIndexServerRouteImport } from './routes/api/spipuniform/schools/index'
import { ServerRoute as ApiSpipuniformSchoolStockIndexServerRouteImport } from './routes/api/spipuniform/school-stock/index'
import { ServerRoute as ApiSpipuniformLocalitiesIndexServerRouteImport } from './routes/api/spipuniform/localities/index'
import { ServerRoute as ApiSpipuniformCountiesIndexServerRouteImport } from './routes/api/spipuniform/counties/index'
import { ServerRoute as ApiTransactionsIdMessagesServerRouteImport } from './routes/api/transactions/$id/messages'
import { ServerRoute as ApiSpipuniformLocalitiesSearchServerRouteImport } from './routes/api/spipuniform/localities/search'
import { ServerRoute as ApiSchoolSubmissionsIdRejectServerRouteImport } from './routes/api/school-submissions/$id.reject'
import { ServerRoute as ApiSchoolSubmissionsIdApproveServerRouteImport } from './routes/api/school-submissions/$id.approve'
import { ServerRoute as ApiProfilesFamilyMemberIdServerRouteImport } from './routes/api.profiles.familyMember.$id'
import { ServerRoute as ApiProductTypesIdAttributesServerRouteImport } from './routes/api/product-types/$id/attributes'
import { ServerRoute as ApiProductCategoriesCategoryIdTypesServerRouteImport } from './routes/api/product-categories/$categoryId/types'
import { ServerRoute as ApiLocalitiesFetchSplatServerRouteImport } from './routes/api/localities/fetch/$'
import { ServerRoute as ApiEmailTemplatesSeedSchoolSetupServerRouteImport } from './routes/api/email/templates.seed-school-setup'
import { ServerRoute as ApiEmailTemplatesSeedSchoolApprovalServerRouteImport } from './routes/api/email/templates/seed-school-approval'
import { ServerRoute as ApiEmailTemplatesSeedApprovalServerRouteImport } from './routes/api/email/templates.seed-approval'
import { ServerRoute as ApiEmailTemplatesPreviewServerRouteImport } from './routes/api/email/templates.preview'
import { ServerRoute as ApiEmailFragmentsDefaultServerRouteImport } from './routes/api/email/fragments.default'
import { ServerRoute as ApiSpipuniformAdminSchoolOwnersIndexServerRouteImport } from './routes/api/spipuniform/admin/school-owners/index'
import { ServerRoute as ApiSpipuniformAdminProductTypesIndexServerRouteImport } from './routes/api/spipuniform/admin/product-types/index'
import { ServerRoute as ApiSpipuniformAdminConditionsIndexServerRouteImport } from './routes/api/spipuniform/admin/conditions/index'
import { ServerRoute as ApiSpipuniformAdminCategoriesIndexServerRouteImport } from './routes/api/spipuniform/admin/categories/index'
import { ServerRoute as ApiSpipuniformAdminAttributesIndexServerRouteImport } from './routes/api/spipuniform/admin/attributes/index'
import { ServerRoute as ApiSpipuniformAdminAttributeValuesIndexServerRouteImport } from './routes/api/spipuniform/admin/attribute-values/index'
import { ServerRoute as ApiSpipuniformAdminProductTypesTypeIdServerRouteImport } from './routes/api/spipuniform/admin/product-types/[typeId]'
import { ServerRoute as ApiSpipuniformAdminConditionsReorderServerRouteImport } from './routes/api/spipuniform/admin/conditions/reorder'
import { ServerRoute as ApiSpipuniformAdminConditionsIdServerRouteImport } from './routes/api/spipuniform/admin/conditions/$id'
import { ServerRoute as ApiSpipuniformAdminCategoriesCategoryIdServerRouteImport } from './routes/api/spipuniform/admin/categories/[categoryId]'
import { ServerRoute as ApiSpipuniformAdminAttributesAttributeIdServerRouteImport } from './routes/api/spipuniform/admin/attributes/[attributeId]'
import { ServerRoute as ApiSpipuniformAdminAttributeValuesValueIdServerRouteImport } from './routes/api/spipuniform/admin/attribute-values/[valueId]'

const rootServerRouteImport = createServerRootRoute()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const MarketplaceRequestsRoute = MarketplaceRequestsRouteImport.update({
  id: '/marketplace/requests',
  path: '/marketplace/requests',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceMyListingsRoute = MarketplaceMyListingsRouteImport.update({
  id: '/marketplace/my-listings',
  path: '/marketplace/my-listings',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceMessagesRoute = MarketplaceMessagesRouteImport.update({
  id: '/marketplace/messages',
  path: '/marketplace/messages',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceFavoritesRoute = MarketplaceFavoritesRouteImport.update({
  id: '/marketplace/favorites',
  path: '/marketplace/favorites',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceCreateRoute = MarketplaceCreateRouteImport.update({
  id: '/marketplace/create',
  path: '/marketplace/create',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceBrowseRoute = MarketplaceBrowseRouteImport.update({
  id: '/marketplace/browse',
  path: '/marketplace/browse',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardStorageSettingsRoute =
  DashboardStorageSettingsRouteImport.update({
    id: '/storage-settings',
    path: '/storage-settings',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardRequestsRoute = DashboardRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardParentRoute = DashboardParentRouteImport.update({
  id: '/parent',
  path: '/parent',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardFileManagerRoute = DashboardFileManagerRouteImport.update({
  id: '/file-manager',
  path: '/file-manager',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardEmailRoute = DashboardEmailRouteImport.update({
  id: '/email',
  path: '/email',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBrandingRoute = DashboardBrandingRouteImport.update({
  id: '/branding',
  path: '/branding',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAccountRoute = DashboardAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPendingRoute = AuthPendingRouteImport.update({
  id: '/auth/pending',
  path: '/auth/pending',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserManagementIndexRoute =
  DashboardUserManagementIndexRouteImport.update({
    id: '/user-management/',
    path: '/user-management/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformIndexRoute =
  DashboardSpipuniformIndexRouteImport.update({
    id: '/spipuniform/',
    path: '/spipuniform/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProfileIndexRoute = DashboardProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => DashboardRoute,
} as any)
const MarketplaceRequestsIdRoute = MarketplaceRequestsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => MarketplaceRequestsRoute,
} as any)
const MarketplaceListingsIdRoute = MarketplaceListingsIdRouteImport.update({
  id: '/marketplace/listings/$id',
  path: '/marketplace/listings/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserManagementUsersRoute =
  DashboardUserManagementUsersRouteImport.update({
    id: '/user-management/users',
    path: '/user-management/users',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementRolesRoute =
  DashboardUserManagementRolesRouteImport.update({
    id: '/user-management/roles',
    path: '/user-management/roles',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementPermissionsRoute =
  DashboardUserManagementPermissionsRouteImport.update({
    id: '/user-management/permissions',
    path: '/user-management/permissions',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementConsolidatedRoute =
  DashboardUserManagementConsolidatedRouteImport.update({
    id: '/user-management/consolidated',
    path: '/user-management/consolidated',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformShopRoute =
  DashboardSpipuniformShopRouteImport.update({
    id: '/spipuniform/shop',
    path: '/spipuniform/shop',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformSchoolsRoute =
  DashboardSpipuniformSchoolsRouteImport.update({
    id: '/spipuniform/schools',
    path: '/spipuniform/schools',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformSchoolStockRoute =
  DashboardSpipuniformSchoolStockRouteImport.update({
    id: '/spipuniform/school-stock',
    path: '/spipuniform/school-stock',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformDataVerificationRoute =
  DashboardSpipuniformDataVerificationRouteImport.update({
    id: '/spipuniform/data-verification',
    path: '/spipuniform/data-verification',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProfileShopOldRoute = DashboardProfileShopOldRouteImport.update({
  id: '/profile/shop-old',
  path: '/profile/shop-old',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProfileShopRoute = DashboardProfileShopRouteImport.update({
  id: '/profile/shop',
  path: '/profile/shop',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProfileFamilyRoute = DashboardProfileFamilyRouteImport.update({
  id: '/profile/family',
  path: '/profile/family',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSpipuniformProductsTypesRoute =
  DashboardSpipuniformProductsTypesRouteImport.update({
    id: '/spipuniform/products/types',
    path: '/spipuniform/products/types',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformProductsConditionsRoute =
  DashboardSpipuniformProductsConditionsRouteImport.update({
    id: '/spipuniform/products/conditions',
    path: '/spipuniform/products/conditions',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformProductsCategoriesRoute =
  DashboardSpipuniformProductsCategoriesRouteImport.update({
    id: '/spipuniform/products/categories',
    path: '/spipuniform/products/categories',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformProductsAttributesRoute =
  DashboardSpipuniformProductsAttributesRouteImport.update({
    id: '/spipuniform/products/attributes',
    path: '/spipuniform/products/attributes',
    getParentRoute: () => DashboardRoute,
  } as any)
const ApiUsersApprovalServerRoute = ApiUsersApprovalServerRouteImport.update({
  id: '/api/users-approval',
  path: '/api/users-approval',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUserProfileServerRoute = ApiUserProfileServerRouteImport.update({
  id: '/api/user-profile',
  path: '/api/user-profile',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUserFilesServerRoute = ApiUserFilesServerRouteImport.update({
  id: '/api/user-files',
  path: '/api/user-files',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUploadServerRoute = ApiUploadServerRouteImport.update({
  id: '/api/upload',
  path: '/api/upload',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTestServerRoute = ApiTestServerRouteImport.update({
  id: '/api/test',
  path: '/api/test',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiShopsServerRoute = ApiShopsServerRouteImport.update({
  id: '/api/shops',
  path: '/api/shops',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiShopOptionsServerRoute = ApiShopOptionsServerRouteImport.update({
  id: '/api/shop-options',
  path: '/api/shop-options',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSchoolsServerRoute = ApiSchoolsServerRouteImport.update({
  id: '/api/schools',
  path: '/api/schools',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSchoolSubmissionsServerRoute =
  ApiSchoolSubmissionsServerRouteImport.update({
    id: '/api/school-submissions',
    path: '/api/school-submissions',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSchoolSetupRequestsServerRoute =
  ApiSchoolSetupRequestsServerRouteImport.update({
    id: '/api/school-setup-requests',
    path: '/api/school-setup-requests',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSchoolApprovalRequestsServerRoute =
  ApiSchoolApprovalRequestsServerRouteImport.update({
    id: '/api/school-approval-requests',
    path: '/api/school-approval-requests',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiRequestsServerRoute = ApiRequestsServerRouteImport.update({
  id: '/api/requests',
  path: '/api/requests',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiReportsServerRoute = ApiReportsServerRouteImport.update({
  id: '/api/reports',
  path: '/api/reports',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProductCategoriesServerRoute =
  ApiProductCategoriesServerRouteImport.update({
    id: '/api/product-categories',
    path: '/api/product-categories',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiMeServerRoute = ApiMeServerRouteImport.update({
  id: '/api/me',
  path: '/api/me',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiLocalitiesServerRoute = ApiLocalitiesServerRouteImport.update({
  id: '/api/localities',
  path: '/api/localities',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiListingsServerRoute = ApiListingsServerRouteImport.update({
  id: '/api/listings',
  path: '/api/listings',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiFilesServerRoute = ApiFilesServerRouteImport.update({
  id: '/api/files',
  path: '/api/files',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiFavoritesServerRoute = ApiFavoritesServerRouteImport.update({
  id: '/api/favorites',
  path: '/api/favorites',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiFamilyMembersServerRoute = ApiFamilyMembersServerRouteImport.update({
  id: '/api/family-members',
  path: '/api/family-members',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiCredentialsServerRoute = ApiCredentialsServerRouteImport.update({
  id: '/api/credentials',
  path: '/api/credentials',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiCountiesServerRoute = ApiCountiesServerRouteImport.update({
  id: '/api/counties',
  path: '/api/counties',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiConditionsServerRoute = ApiConditionsServerRouteImport.update({
  id: '/api/conditions',
  path: '/api/conditions',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChangePasswordServerRoute = ApiChangePasswordServerRouteImport.update({
  id: '/api/change-password',
  path: '/api/change-password',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarServerRoute = ApiAvatarServerRouteImport.update({
  id: '/api/avatar',
  path: '/api/avatar',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSettingsServerRoute = ApiAuthSettingsServerRouteImport.update({
  id: '/api/auth-settings',
  path: '/api/auth-settings',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersIndexServerRoute = ApiUsersIndexServerRouteImport.update({
  id: '/api/users/',
  path: '/api/users/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTransactionsIndexServerRoute =
  ApiTransactionsIndexServerRouteImport.update({
    id: '/api/transactions/',
    path: '/api/transactions/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiRolesIndexServerRoute = ApiRolesIndexServerRouteImport.update({
  id: '/api/roles/',
  path: '/api/roles/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProductTypesIndexServerRoute =
  ApiProductTypesIndexServerRouteImport.update({
    id: '/api/product-types/',
    path: '/api/product-types/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiEmailIndexServerRoute = ApiEmailIndexServerRouteImport.update({
  id: '/api/email/',
  path: '/api/email/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiBrandingIndexServerRoute = ApiBrandingIndexServerRouteImport.update({
  id: '/api/branding/',
  path: '/api/branding/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersActionsServerRoute = ApiUsersActionsServerRouteImport.update({
  id: '/api/users/actions',
  path: '/api/users/actions',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/api/users/$userId',
  path: '/api/users/$userId',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTransactionsIdServerRoute = ApiTransactionsIdServerRouteImport.update({
  id: '/api/transactions/$id',
  path: '/api/transactions/$id',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiStorageSettingsServerRoute =
  ApiStorageSettingsServerRouteImport.update({
    id: '/api/storage/settings',
    path: '/api/storage/settings',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSchoolsIdServerRoute = ApiSchoolsIdServerRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiSchoolsServerRoute,
} as any)
const ApiRolesSeedServerRoute = ApiRolesSeedServerRouteImport.update({
  id: '/api/roles/seed',
  path: '/api/roles/seed',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRolesRoleIdServerRoute = ApiRolesRoleIdServerRouteImport.update({
  id: '/api/roles/$roleId',
  path: '/api/roles/$roleId',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRequestsIdServerRoute = ApiRequestsIdServerRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiRequestsServerRoute,
} as any)
const ApiProfilesShopServerRoute = ApiProfilesShopServerRouteImport.update({
  id: '/api/profiles/shop',
  path: '/api/profiles/shop',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProfilesFamilyMembersServerRoute =
  ApiProfilesFamilyMembersServerRouteImport.update({
    id: '/api/profiles/familyMembers',
    path: '/api/profiles/familyMembers',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiMarketplaceSearchServerRoute =
  ApiMarketplaceSearchServerRouteImport.update({
    id: '/api/marketplace/search',
    path: '/api/marketplace/search',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiLocalitiesSplatServerRoute =
  ApiLocalitiesSplatServerRouteImport.update({
    id: '/$',
    path: '/$',
    getParentRoute: () => ApiLocalitiesServerRoute,
  } as any)
const ApiListingsIdServerRoute = ApiListingsIdServerRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiListingsServerRoute,
} as any)
const ApiFamilyMembersIdServerRoute =
  ApiFamilyMembersIdServerRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => ApiFamilyMembersServerRoute,
  } as any)
const ApiEmailTestServerRoute = ApiEmailTestServerRouteImport.update({
  id: '/api/email/test',
  path: '/api/email/test',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailTemplatesServerRoute = ApiEmailTemplatesServerRouteImport.update({
  id: '/api/email/templates',
  path: '/api/email/templates',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailSettingsServerRoute = ApiEmailSettingsServerRouteImport.update({
  id: '/api/email/settings',
  path: '/api/email/settings',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailLogsServerRoute = ApiEmailLogsServerRouteImport.update({
  id: '/api/email/logs',
  path: '/api/email/logs',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailFragmentsServerRoute = ApiEmailFragmentsServerRouteImport.update({
  id: '/api/email/fragments',
  path: '/api/email/fragments',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiBrandingActiveServerRoute = ApiBrandingActiveServerRouteImport.update({
  id: '/api/branding/active',
  path: '/api/branding/active',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthUpgradeFirstAdminServerRoute =
  ApiAuthUpgradeFirstAdminServerRouteImport.update({
    id: '/api/auth/upgrade-first-admin',
    path: '/api/auth/upgrade-first-admin',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthSignupPostHookServerRoute =
  ApiAuthSignupPostHookServerRouteImport.update({
    id: '/api/auth/signup-post-hook',
    path: '/api/auth/signup-post-hook',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthRolesPublicServerRoute =
  ApiAuthRolesPublicServerRouteImport.update({
    id: '/api/auth/roles-public',
    path: '/api/auth/roles-public',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthPermissionsServerRoute =
  ApiAuthPermissionsServerRouteImport.update({
    id: '/api/auth/permissions',
    path: '/api/auth/permissions',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthAdminExistsServerRoute =
  ApiAuthAdminExistsServerRouteImport.update({
    id: '/api/auth/admin-exists',
    path: '/api/auth/admin-exists',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSettingsFlagServerRoute =
  ApiAuthSettingsFlagServerRouteImport.update({
    id: '/flag',
    path: '/flag',
    getParentRoute: () => ApiAuthSettingsServerRoute,
  } as any)
const ApiAdminDashboardStatsServerRoute =
  ApiAdminDashboardStatsServerRouteImport.update({
    id: '/api/admin/dashboard-stats',
    path: '/api/admin/dashboard-stats',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAdminAnalyticsServerRoute = ApiAdminAnalyticsServerRouteImport.update({
  id: '/api/admin/analytics',
  path: '/api/admin/analytics',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSpipuniformShopsIndexServerRoute =
  ApiSpipuniformShopsIndexServerRouteImport.update({
    id: '/api/spipuniform/shops/',
    path: '/api/spipuniform/shops/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformSchoolsIndexServerRoute =
  ApiSpipuniformSchoolsIndexServerRouteImport.update({
    id: '/api/spipuniform/schools/',
    path: '/api/spipuniform/schools/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformSchoolStockIndexServerRoute =
  ApiSpipuniformSchoolStockIndexServerRouteImport.update({
    id: '/api/spipuniform/school-stock/',
    path: '/api/spipuniform/school-stock/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformLocalitiesIndexServerRoute =
  ApiSpipuniformLocalitiesIndexServerRouteImport.update({
    id: '/api/spipuniform/localities/',
    path: '/api/spipuniform/localities/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformCountiesIndexServerRoute =
  ApiSpipuniformCountiesIndexServerRouteImport.update({
    id: '/api/spipuniform/counties/',
    path: '/api/spipuniform/counties/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiTransactionsIdMessagesServerRoute =
  ApiTransactionsIdMessagesServerRouteImport.update({
    id: '/messages',
    path: '/messages',
    getParentRoute: () => ApiTransactionsIdServerRoute,
  } as any)
const ApiSpipuniformLocalitiesSearchServerRoute =
  ApiSpipuniformLocalitiesSearchServerRouteImport.update({
    id: '/api/spipuniform/localities/search',
    path: '/api/spipuniform/localities/search',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSchoolSubmissionsIdRejectServerRoute =
  ApiSchoolSubmissionsIdRejectServerRouteImport.update({
    id: '/$id/reject',
    path: '/$id/reject',
    getParentRoute: () => ApiSchoolSubmissionsServerRoute,
  } as any)
const ApiSchoolSubmissionsIdApproveServerRoute =
  ApiSchoolSubmissionsIdApproveServerRouteImport.update({
    id: '/$id/approve',
    path: '/$id/approve',
    getParentRoute: () => ApiSchoolSubmissionsServerRoute,
  } as any)
const ApiProfilesFamilyMemberIdServerRoute =
  ApiProfilesFamilyMemberIdServerRouteImport.update({
    id: '/api/profiles/familyMember/$id',
    path: '/api/profiles/familyMember/$id',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiProductTypesIdAttributesServerRoute =
  ApiProductTypesIdAttributesServerRouteImport.update({
    id: '/api/product-types/$id/attributes',
    path: '/api/product-types/$id/attributes',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiProductCategoriesCategoryIdTypesServerRoute =
  ApiProductCategoriesCategoryIdTypesServerRouteImport.update({
    id: '/$categoryId/types',
    path: '/$categoryId/types',
    getParentRoute: () => ApiProductCategoriesServerRoute,
  } as any)
const ApiLocalitiesFetchSplatServerRoute =
  ApiLocalitiesFetchSplatServerRouteImport.update({
    id: '/fetch/$',
    path: '/fetch/$',
    getParentRoute: () => ApiLocalitiesServerRoute,
  } as any)
const ApiEmailTemplatesSeedSchoolSetupServerRoute =
  ApiEmailTemplatesSeedSchoolSetupServerRouteImport.update({
    id: '/seed-school-setup',
    path: '/seed-school-setup',
    getParentRoute: () => ApiEmailTemplatesServerRoute,
  } as any)
const ApiEmailTemplatesSeedSchoolApprovalServerRoute =
  ApiEmailTemplatesSeedSchoolApprovalServerRouteImport.update({
    id: '/seed-school-approval',
    path: '/seed-school-approval',
    getParentRoute: () => ApiEmailTemplatesServerRoute,
  } as any)
const ApiEmailTemplatesSeedApprovalServerRoute =
  ApiEmailTemplatesSeedApprovalServerRouteImport.update({
    id: '/seed-approval',
    path: '/seed-approval',
    getParentRoute: () => ApiEmailTemplatesServerRoute,
  } as any)
const ApiEmailTemplatesPreviewServerRoute =
  ApiEmailTemplatesPreviewServerRouteImport.update({
    id: '/preview',
    path: '/preview',
    getParentRoute: () => ApiEmailTemplatesServerRoute,
  } as any)
const ApiEmailFragmentsDefaultServerRoute =
  ApiEmailFragmentsDefaultServerRouteImport.update({
    id: '/default',
    path: '/default',
    getParentRoute: () => ApiEmailFragmentsServerRoute,
  } as any)
const ApiSpipuniformAdminSchoolOwnersIndexServerRoute =
  ApiSpipuniformAdminSchoolOwnersIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/school-owners/',
    path: '/api/spipuniform/admin/school-owners/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminProductTypesIndexServerRoute =
  ApiSpipuniformAdminProductTypesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/product-types/',
    path: '/api/spipuniform/admin/product-types/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminConditionsIndexServerRoute =
  ApiSpipuniformAdminConditionsIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/conditions/',
    path: '/api/spipuniform/admin/conditions/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminCategoriesIndexServerRoute =
  ApiSpipuniformAdminCategoriesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/categories/',
    path: '/api/spipuniform/admin/categories/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributesIndexServerRoute =
  ApiSpipuniformAdminAttributesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/attributes/',
    path: '/api/spipuniform/admin/attributes/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributeValuesIndexServerRoute =
  ApiSpipuniformAdminAttributeValuesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/attribute-values/',
    path: '/api/spipuniform/admin/attribute-values/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminProductTypesTypeIdServerRoute =
  ApiSpipuniformAdminProductTypesTypeIdServerRouteImport.update({
    id: '/api/spipuniform/admin/product-types/typeId',
    path: '/api/spipuniform/admin/product-types/typeId',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminConditionsReorderServerRoute =
  ApiSpipuniformAdminConditionsReorderServerRouteImport.update({
    id: '/api/spipuniform/admin/conditions/reorder',
    path: '/api/spipuniform/admin/conditions/reorder',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminConditionsIdServerRoute =
  ApiSpipuniformAdminConditionsIdServerRouteImport.update({
    id: '/api/spipuniform/admin/conditions/$id',
    path: '/api/spipuniform/admin/conditions/$id',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminCategoriesCategoryIdServerRoute =
  ApiSpipuniformAdminCategoriesCategoryIdServerRouteImport.update({
    id: '/api/spipuniform/admin/categories/categoryId',
    path: '/api/spipuniform/admin/categories/categoryId',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributesAttributeIdServerRoute =
  ApiSpipuniformAdminAttributesAttributeIdServerRouteImport.update({
    id: '/api/spipuniform/admin/attributes/attributeId',
    path: '/api/spipuniform/admin/attributes/attributeId',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributeValuesValueIdServerRoute =
  ApiSpipuniformAdminAttributeValuesValueIdServerRouteImport.update({
    id: '/api/spipuniform/admin/attribute-values/valueId',
    path: '/api/spipuniform/admin/attribute-values/valueId',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/pending': typeof AuthPendingRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/branding': typeof DashboardBrandingRoute
  '/dashboard/email': typeof DashboardEmailRoute
  '/dashboard/file-manager': typeof DashboardFileManagerRoute
  '/dashboard/parent': typeof DashboardParentRoute
  '/dashboard/requests': typeof DashboardRequestsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/storage-settings': typeof DashboardStorageSettingsRoute
  '/marketplace/browse': typeof MarketplaceBrowseRoute
  '/marketplace/create': typeof MarketplaceCreateRoute
  '/marketplace/favorites': typeof MarketplaceFavoritesRoute
  '/marketplace/messages': typeof MarketplaceMessagesRoute
  '/marketplace/my-listings': typeof MarketplaceMyListingsRoute
  '/marketplace/requests': typeof MarketplaceRequestsRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/dashboard/profile/family': typeof DashboardProfileFamilyRoute
  '/dashboard/profile/shop': typeof DashboardProfileShopRoute
  '/dashboard/profile/shop-old': typeof DashboardProfileShopOldRoute
  '/dashboard/spipuniform/data-verification': typeof DashboardSpipuniformDataVerificationRoute
  '/dashboard/spipuniform/school-stock': typeof DashboardSpipuniformSchoolStockRoute
  '/dashboard/spipuniform/schools': typeof DashboardSpipuniformSchoolsRoute
  '/dashboard/spipuniform/shop': typeof DashboardSpipuniformShopRoute
  '/dashboard/user-management/consolidated': typeof DashboardUserManagementConsolidatedRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/marketplace/listings/$id': typeof MarketplaceListingsIdRoute
  '/marketplace/requests/$id': typeof MarketplaceRequestsIdRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/spipuniform': typeof DashboardSpipuniformIndexRoute
  '/dashboard/user-management': typeof DashboardUserManagementIndexRoute
  '/dashboard/spipuniform/products/attributes': typeof DashboardSpipuniformProductsAttributesRoute
  '/dashboard/spipuniform/products/categories': typeof DashboardSpipuniformProductsCategoriesRoute
  '/dashboard/spipuniform/products/conditions': typeof DashboardSpipuniformProductsConditionsRoute
  '/dashboard/spipuniform/products/types': typeof DashboardSpipuniformProductsTypesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/auth/pending': typeof AuthPendingRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/branding': typeof DashboardBrandingRoute
  '/dashboard/email': typeof DashboardEmailRoute
  '/dashboard/file-manager': typeof DashboardFileManagerRoute
  '/dashboard/parent': typeof DashboardParentRoute
  '/dashboard/requests': typeof DashboardRequestsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/storage-settings': typeof DashboardStorageSettingsRoute
  '/marketplace/browse': typeof MarketplaceBrowseRoute
  '/marketplace/create': typeof MarketplaceCreateRoute
  '/marketplace/favorites': typeof MarketplaceFavoritesRoute
  '/marketplace/messages': typeof MarketplaceMessagesRoute
  '/marketplace/my-listings': typeof MarketplaceMyListingsRoute
  '/marketplace/requests': typeof MarketplaceRequestsRouteWithChildren
  '/dashboard': typeof DashboardIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/dashboard/profile/family': typeof DashboardProfileFamilyRoute
  '/dashboard/profile/shop': typeof DashboardProfileShopRoute
  '/dashboard/profile/shop-old': typeof DashboardProfileShopOldRoute
  '/dashboard/spipuniform/data-verification': typeof DashboardSpipuniformDataVerificationRoute
  '/dashboard/spipuniform/school-stock': typeof DashboardSpipuniformSchoolStockRoute
  '/dashboard/spipuniform/schools': typeof DashboardSpipuniformSchoolsRoute
  '/dashboard/spipuniform/shop': typeof DashboardSpipuniformShopRoute
  '/dashboard/user-management/consolidated': typeof DashboardUserManagementConsolidatedRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/marketplace/listings/$id': typeof MarketplaceListingsIdRoute
  '/marketplace/requests/$id': typeof MarketplaceRequestsIdRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/spipuniform': typeof DashboardSpipuniformIndexRoute
  '/dashboard/user-management': typeof DashboardUserManagementIndexRoute
  '/dashboard/spipuniform/products/attributes': typeof DashboardSpipuniformProductsAttributesRoute
  '/dashboard/spipuniform/products/categories': typeof DashboardSpipuniformProductsCategoriesRoute
  '/dashboard/spipuniform/products/conditions': typeof DashboardSpipuniformProductsConditionsRoute
  '/dashboard/spipuniform/products/types': typeof DashboardSpipuniformProductsTypesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/pending': typeof AuthPendingRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/branding': typeof DashboardBrandingRoute
  '/dashboard/email': typeof DashboardEmailRoute
  '/dashboard/file-manager': typeof DashboardFileManagerRoute
  '/dashboard/parent': typeof DashboardParentRoute
  '/dashboard/requests': typeof DashboardRequestsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/storage-settings': typeof DashboardStorageSettingsRoute
  '/marketplace/browse': typeof MarketplaceBrowseRoute
  '/marketplace/create': typeof MarketplaceCreateRoute
  '/marketplace/favorites': typeof MarketplaceFavoritesRoute
  '/marketplace/messages': typeof MarketplaceMessagesRoute
  '/marketplace/my-listings': typeof MarketplaceMyListingsRoute
  '/marketplace/requests': typeof MarketplaceRequestsRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/dashboard/profile/family': typeof DashboardProfileFamilyRoute
  '/dashboard/profile/shop': typeof DashboardProfileShopRoute
  '/dashboard/profile/shop-old': typeof DashboardProfileShopOldRoute
  '/dashboard/spipuniform/data-verification': typeof DashboardSpipuniformDataVerificationRoute
  '/dashboard/spipuniform/school-stock': typeof DashboardSpipuniformSchoolStockRoute
  '/dashboard/spipuniform/schools': typeof DashboardSpipuniformSchoolsRoute
  '/dashboard/spipuniform/shop': typeof DashboardSpipuniformShopRoute
  '/dashboard/user-management/consolidated': typeof DashboardUserManagementConsolidatedRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/marketplace/listings/$id': typeof MarketplaceListingsIdRoute
  '/marketplace/requests/$id': typeof MarketplaceRequestsIdRoute
  '/dashboard/profile/': typeof DashboardProfileIndexRoute
  '/dashboard/spipuniform/': typeof DashboardSpipuniformIndexRoute
  '/dashboard/user-management/': typeof DashboardUserManagementIndexRoute
  '/dashboard/spipuniform/products/attributes': typeof DashboardSpipuniformProductsAttributesRoute
  '/dashboard/spipuniform/products/categories': typeof DashboardSpipuniformProductsCategoriesRoute
  '/dashboard/spipuniform/products/conditions': typeof DashboardSpipuniformProductsConditionsRoute
  '/dashboard/spipuniform/products/types': typeof DashboardSpipuniformProductsTypesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/auth/pending'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/account'
    | '/dashboard/branding'
    | '/dashboard/email'
    | '/dashboard/file-manager'
    | '/dashboard/parent'
    | '/dashboard/requests'
    | '/dashboard/settings'
    | '/dashboard/storage-settings'
    | '/marketplace/browse'
    | '/marketplace/create'
    | '/marketplace/favorites'
    | '/marketplace/messages'
    | '/marketplace/my-listings'
    | '/marketplace/requests'
    | '/dashboard/'
    | '/marketplace'
    | '/dashboard/profile/family'
    | '/dashboard/profile/shop'
    | '/dashboard/profile/shop-old'
    | '/dashboard/spipuniform/data-verification'
    | '/dashboard/spipuniform/school-stock'
    | '/dashboard/spipuniform/schools'
    | '/dashboard/spipuniform/shop'
    | '/dashboard/user-management/consolidated'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/marketplace/listings/$id'
    | '/marketplace/requests/$id'
    | '/dashboard/profile'
    | '/dashboard/spipuniform'
    | '/dashboard/user-management'
    | '/dashboard/spipuniform/products/attributes'
    | '/dashboard/spipuniform/products/categories'
    | '/dashboard/spipuniform/products/conditions'
    | '/dashboard/spipuniform/products/types'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth/pending'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/account'
    | '/dashboard/branding'
    | '/dashboard/email'
    | '/dashboard/file-manager'
    | '/dashboard/parent'
    | '/dashboard/requests'
    | '/dashboard/settings'
    | '/dashboard/storage-settings'
    | '/marketplace/browse'
    | '/marketplace/create'
    | '/marketplace/favorites'
    | '/marketplace/messages'
    | '/marketplace/my-listings'
    | '/marketplace/requests'
    | '/dashboard'
    | '/marketplace'
    | '/dashboard/profile/family'
    | '/dashboard/profile/shop'
    | '/dashboard/profile/shop-old'
    | '/dashboard/spipuniform/data-verification'
    | '/dashboard/spipuniform/school-stock'
    | '/dashboard/spipuniform/schools'
    | '/dashboard/spipuniform/shop'
    | '/dashboard/user-management/consolidated'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/marketplace/listings/$id'
    | '/marketplace/requests/$id'
    | '/dashboard/profile'
    | '/dashboard/spipuniform'
    | '/dashboard/user-management'
    | '/dashboard/spipuniform/products/attributes'
    | '/dashboard/spipuniform/products/categories'
    | '/dashboard/spipuniform/products/conditions'
    | '/dashboard/spipuniform/products/types'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/auth/pending'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/account'
    | '/dashboard/branding'
    | '/dashboard/email'
    | '/dashboard/file-manager'
    | '/dashboard/parent'
    | '/dashboard/requests'
    | '/dashboard/settings'
    | '/dashboard/storage-settings'
    | '/marketplace/browse'
    | '/marketplace/create'
    | '/marketplace/favorites'
    | '/marketplace/messages'
    | '/marketplace/my-listings'
    | '/marketplace/requests'
    | '/dashboard/'
    | '/marketplace/'
    | '/dashboard/profile/family'
    | '/dashboard/profile/shop'
    | '/dashboard/profile/shop-old'
    | '/dashboard/spipuniform/data-verification'
    | '/dashboard/spipuniform/school-stock'
    | '/dashboard/spipuniform/schools'
    | '/dashboard/spipuniform/shop'
    | '/dashboard/user-management/consolidated'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/marketplace/listings/$id'
    | '/marketplace/requests/$id'
    | '/dashboard/profile/'
    | '/dashboard/spipuniform/'
    | '/dashboard/user-management/'
    | '/dashboard/spipuniform/products/attributes'
    | '/dashboard/spipuniform/products/categories'
    | '/dashboard/spipuniform/products/conditions'
    | '/dashboard/spipuniform/products/types'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthPendingRoute: typeof AuthPendingRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  MarketplaceBrowseRoute: typeof MarketplaceBrowseRoute
  MarketplaceCreateRoute: typeof MarketplaceCreateRoute
  MarketplaceFavoritesRoute: typeof MarketplaceFavoritesRoute
  MarketplaceMessagesRoute: typeof MarketplaceMessagesRoute
  MarketplaceMyListingsRoute: typeof MarketplaceMyListingsRoute
  MarketplaceRequestsRoute: typeof MarketplaceRequestsRouteWithChildren
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  MarketplaceListingsIdRoute: typeof MarketplaceListingsIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth-settings': typeof ApiAuthSettingsServerRouteWithChildren
  '/api/avatar': typeof ApiAvatarServerRoute
  '/api/change-password': typeof ApiChangePasswordServerRoute
  '/api/conditions': typeof ApiConditionsServerRoute
  '/api/counties': typeof ApiCountiesServerRoute
  '/api/credentials': typeof ApiCredentialsServerRoute
  '/api/family-members': typeof ApiFamilyMembersServerRouteWithChildren
  '/api/favorites': typeof ApiFavoritesServerRoute
  '/api/files': typeof ApiFilesServerRoute
  '/api/listings': typeof ApiListingsServerRouteWithChildren
  '/api/localities': typeof ApiLocalitiesServerRouteWithChildren
  '/api/me': typeof ApiMeServerRoute
  '/api/product-categories': typeof ApiProductCategoriesServerRouteWithChildren
  '/api/reports': typeof ApiReportsServerRoute
  '/api/requests': typeof ApiRequestsServerRouteWithChildren
  '/api/school-approval-requests': typeof ApiSchoolApprovalRequestsServerRoute
  '/api/school-setup-requests': typeof ApiSchoolSetupRequestsServerRoute
  '/api/school-submissions': typeof ApiSchoolSubmissionsServerRouteWithChildren
  '/api/schools': typeof ApiSchoolsServerRouteWithChildren
  '/api/shop-options': typeof ApiShopOptionsServerRoute
  '/api/shops': typeof ApiShopsServerRoute
  '/api/test': typeof ApiTestServerRoute
  '/api/upload': typeof ApiUploadServerRoute
  '/api/user-files': typeof ApiUserFilesServerRoute
  '/api/user-profile': typeof ApiUserProfileServerRoute
  '/api/users-approval': typeof ApiUsersApprovalServerRoute
  '/api/admin/analytics': typeof ApiAdminAnalyticsServerRoute
  '/api/admin/dashboard-stats': typeof ApiAdminDashboardStatsServerRoute
  '/api/auth-settings/flag': typeof ApiAuthSettingsFlagServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/admin-exists': typeof ApiAuthAdminExistsServerRoute
  '/api/auth/permissions': typeof ApiAuthPermissionsServerRoute
  '/api/auth/roles-public': typeof ApiAuthRolesPublicServerRoute
  '/api/auth/signup-post-hook': typeof ApiAuthSignupPostHookServerRoute
  '/api/auth/upgrade-first-admin': typeof ApiAuthUpgradeFirstAdminServerRoute
  '/api/branding/active': typeof ApiBrandingActiveServerRoute
  '/api/email/fragments': typeof ApiEmailFragmentsServerRouteWithChildren
  '/api/email/logs': typeof ApiEmailLogsServerRoute
  '/api/email/settings': typeof ApiEmailSettingsServerRoute
  '/api/email/templates': typeof ApiEmailTemplatesServerRouteWithChildren
  '/api/email/test': typeof ApiEmailTestServerRoute
  '/api/family-members/$id': typeof ApiFamilyMembersIdServerRoute
  '/api/listings/$id': typeof ApiListingsIdServerRoute
  '/api/localities/$': typeof ApiLocalitiesSplatServerRoute
  '/api/marketplace/search': typeof ApiMarketplaceSearchServerRoute
  '/api/profiles/familyMembers': typeof ApiProfilesFamilyMembersServerRoute
  '/api/profiles/shop': typeof ApiProfilesShopServerRoute
  '/api/requests/$id': typeof ApiRequestsIdServerRoute
  '/api/roles/$roleId': typeof ApiRolesRoleIdServerRoute
  '/api/roles/seed': typeof ApiRolesSeedServerRoute
  '/api/schools/$id': typeof ApiSchoolsIdServerRoute
  '/api/storage/settings': typeof ApiStorageSettingsServerRoute
  '/api/transactions/$id': typeof ApiTransactionsIdServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
  '/api/users/actions': typeof ApiUsersActionsServerRoute
  '/api/branding': typeof ApiBrandingIndexServerRoute
  '/api/email': typeof ApiEmailIndexServerRoute
  '/api/product-types': typeof ApiProductTypesIndexServerRoute
  '/api/roles': typeof ApiRolesIndexServerRoute
  '/api/transactions': typeof ApiTransactionsIndexServerRoute
  '/api/users': typeof ApiUsersIndexServerRoute
  '/api/email/fragments/default': typeof ApiEmailFragmentsDefaultServerRoute
  '/api/email/templates/preview': typeof ApiEmailTemplatesPreviewServerRoute
  '/api/email/templates/seed-approval': typeof ApiEmailTemplatesSeedApprovalServerRoute
  '/api/email/templates/seed-school-approval': typeof ApiEmailTemplatesSeedSchoolApprovalServerRoute
  '/api/email/templates/seed-school-setup': typeof ApiEmailTemplatesSeedSchoolSetupServerRoute
  '/api/localities/fetch/$': typeof ApiLocalitiesFetchSplatServerRoute
  '/api/product-categories/$categoryId/types': typeof ApiProductCategoriesCategoryIdTypesServerRoute
  '/api/product-types/$id/attributes': typeof ApiProductTypesIdAttributesServerRoute
  '/api/profiles/familyMember/$id': typeof ApiProfilesFamilyMemberIdServerRoute
  '/api/school-submissions/$id/approve': typeof ApiSchoolSubmissionsIdApproveServerRoute
  '/api/school-submissions/$id/reject': typeof ApiSchoolSubmissionsIdRejectServerRoute
  '/api/spipuniform/localities/search': typeof ApiSpipuniformLocalitiesSearchServerRoute
  '/api/transactions/$id/messages': typeof ApiTransactionsIdMessagesServerRoute
  '/api/spipuniform/counties': typeof ApiSpipuniformCountiesIndexServerRoute
  '/api/spipuniform/localities': typeof ApiSpipuniformLocalitiesIndexServerRoute
  '/api/spipuniform/school-stock': typeof ApiSpipuniformSchoolStockIndexServerRoute
  '/api/spipuniform/schools': typeof ApiSpipuniformSchoolsIndexServerRoute
  '/api/spipuniform/shops': typeof ApiSpipuniformShopsIndexServerRoute
  '/api/spipuniform/admin/attribute-values/valueId': typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  '/api/spipuniform/admin/attributes/attributeId': typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  '/api/spipuniform/admin/categories/categoryId': typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  '/api/spipuniform/admin/conditions/$id': typeof ApiSpipuniformAdminConditionsIdServerRoute
  '/api/spipuniform/admin/conditions/reorder': typeof ApiSpipuniformAdminConditionsReorderServerRoute
  '/api/spipuniform/admin/product-types/typeId': typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  '/api/spipuniform/admin/attribute-values': typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  '/api/spipuniform/admin/attributes': typeof ApiSpipuniformAdminAttributesIndexServerRoute
  '/api/spipuniform/admin/categories': typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  '/api/spipuniform/admin/conditions': typeof ApiSpipuniformAdminConditionsIndexServerRoute
  '/api/spipuniform/admin/product-types': typeof ApiSpipuniformAdminProductTypesIndexServerRoute
  '/api/spipuniform/admin/school-owners': typeof ApiSpipuniformAdminSchoolOwnersIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth-settings': typeof ApiAuthSettingsServerRouteWithChildren
  '/api/avatar': typeof ApiAvatarServerRoute
  '/api/change-password': typeof ApiChangePasswordServerRoute
  '/api/conditions': typeof ApiConditionsServerRoute
  '/api/counties': typeof ApiCountiesServerRoute
  '/api/credentials': typeof ApiCredentialsServerRoute
  '/api/family-members': typeof ApiFamilyMembersServerRouteWithChildren
  '/api/favorites': typeof ApiFavoritesServerRoute
  '/api/files': typeof ApiFilesServerRoute
  '/api/listings': typeof ApiListingsServerRouteWithChildren
  '/api/localities': typeof ApiLocalitiesServerRouteWithChildren
  '/api/me': typeof ApiMeServerRoute
  '/api/product-categories': typeof ApiProductCategoriesServerRouteWithChildren
  '/api/reports': typeof ApiReportsServerRoute
  '/api/requests': typeof ApiRequestsServerRouteWithChildren
  '/api/school-approval-requests': typeof ApiSchoolApprovalRequestsServerRoute
  '/api/school-setup-requests': typeof ApiSchoolSetupRequestsServerRoute
  '/api/school-submissions': typeof ApiSchoolSubmissionsServerRouteWithChildren
  '/api/schools': typeof ApiSchoolsServerRouteWithChildren
  '/api/shop-options': typeof ApiShopOptionsServerRoute
  '/api/shops': typeof ApiShopsServerRoute
  '/api/test': typeof ApiTestServerRoute
  '/api/upload': typeof ApiUploadServerRoute
  '/api/user-files': typeof ApiUserFilesServerRoute
  '/api/user-profile': typeof ApiUserProfileServerRoute
  '/api/users-approval': typeof ApiUsersApprovalServerRoute
  '/api/admin/analytics': typeof ApiAdminAnalyticsServerRoute
  '/api/admin/dashboard-stats': typeof ApiAdminDashboardStatsServerRoute
  '/api/auth-settings/flag': typeof ApiAuthSettingsFlagServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/admin-exists': typeof ApiAuthAdminExistsServerRoute
  '/api/auth/permissions': typeof ApiAuthPermissionsServerRoute
  '/api/auth/roles-public': typeof ApiAuthRolesPublicServerRoute
  '/api/auth/signup-post-hook': typeof ApiAuthSignupPostHookServerRoute
  '/api/auth/upgrade-first-admin': typeof ApiAuthUpgradeFirstAdminServerRoute
  '/api/branding/active': typeof ApiBrandingActiveServerRoute
  '/api/email/fragments': typeof ApiEmailFragmentsServerRouteWithChildren
  '/api/email/logs': typeof ApiEmailLogsServerRoute
  '/api/email/settings': typeof ApiEmailSettingsServerRoute
  '/api/email/templates': typeof ApiEmailTemplatesServerRouteWithChildren
  '/api/email/test': typeof ApiEmailTestServerRoute
  '/api/family-members/$id': typeof ApiFamilyMembersIdServerRoute
  '/api/listings/$id': typeof ApiListingsIdServerRoute
  '/api/localities/$': typeof ApiLocalitiesSplatServerRoute
  '/api/marketplace/search': typeof ApiMarketplaceSearchServerRoute
  '/api/profiles/familyMembers': typeof ApiProfilesFamilyMembersServerRoute
  '/api/profiles/shop': typeof ApiProfilesShopServerRoute
  '/api/requests/$id': typeof ApiRequestsIdServerRoute
  '/api/roles/$roleId': typeof ApiRolesRoleIdServerRoute
  '/api/roles/seed': typeof ApiRolesSeedServerRoute
  '/api/schools/$id': typeof ApiSchoolsIdServerRoute
  '/api/storage/settings': typeof ApiStorageSettingsServerRoute
  '/api/transactions/$id': typeof ApiTransactionsIdServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
  '/api/users/actions': typeof ApiUsersActionsServerRoute
  '/api/branding': typeof ApiBrandingIndexServerRoute
  '/api/email': typeof ApiEmailIndexServerRoute
  '/api/product-types': typeof ApiProductTypesIndexServerRoute
  '/api/roles': typeof ApiRolesIndexServerRoute
  '/api/transactions': typeof ApiTransactionsIndexServerRoute
  '/api/users': typeof ApiUsersIndexServerRoute
  '/api/email/fragments/default': typeof ApiEmailFragmentsDefaultServerRoute
  '/api/email/templates/preview': typeof ApiEmailTemplatesPreviewServerRoute
  '/api/email/templates/seed-approval': typeof ApiEmailTemplatesSeedApprovalServerRoute
  '/api/email/templates/seed-school-approval': typeof ApiEmailTemplatesSeedSchoolApprovalServerRoute
  '/api/email/templates/seed-school-setup': typeof ApiEmailTemplatesSeedSchoolSetupServerRoute
  '/api/localities/fetch/$': typeof ApiLocalitiesFetchSplatServerRoute
  '/api/product-categories/$categoryId/types': typeof ApiProductCategoriesCategoryIdTypesServerRoute
  '/api/product-types/$id/attributes': typeof ApiProductTypesIdAttributesServerRoute
  '/api/profiles/familyMember/$id': typeof ApiProfilesFamilyMemberIdServerRoute
  '/api/school-submissions/$id/approve': typeof ApiSchoolSubmissionsIdApproveServerRoute
  '/api/school-submissions/$id/reject': typeof ApiSchoolSubmissionsIdRejectServerRoute
  '/api/spipuniform/localities/search': typeof ApiSpipuniformLocalitiesSearchServerRoute
  '/api/transactions/$id/messages': typeof ApiTransactionsIdMessagesServerRoute
  '/api/spipuniform/counties': typeof ApiSpipuniformCountiesIndexServerRoute
  '/api/spipuniform/localities': typeof ApiSpipuniformLocalitiesIndexServerRoute
  '/api/spipuniform/school-stock': typeof ApiSpipuniformSchoolStockIndexServerRoute
  '/api/spipuniform/schools': typeof ApiSpipuniformSchoolsIndexServerRoute
  '/api/spipuniform/shops': typeof ApiSpipuniformShopsIndexServerRoute
  '/api/spipuniform/admin/attribute-values/valueId': typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  '/api/spipuniform/admin/attributes/attributeId': typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  '/api/spipuniform/admin/categories/categoryId': typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  '/api/spipuniform/admin/conditions/$id': typeof ApiSpipuniformAdminConditionsIdServerRoute
  '/api/spipuniform/admin/conditions/reorder': typeof ApiSpipuniformAdminConditionsReorderServerRoute
  '/api/spipuniform/admin/product-types/typeId': typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  '/api/spipuniform/admin/attribute-values': typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  '/api/spipuniform/admin/attributes': typeof ApiSpipuniformAdminAttributesIndexServerRoute
  '/api/spipuniform/admin/categories': typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  '/api/spipuniform/admin/conditions': typeof ApiSpipuniformAdminConditionsIndexServerRoute
  '/api/spipuniform/admin/product-types': typeof ApiSpipuniformAdminProductTypesIndexServerRoute
  '/api/spipuniform/admin/school-owners': typeof ApiSpipuniformAdminSchoolOwnersIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth-settings': typeof ApiAuthSettingsServerRouteWithChildren
  '/api/avatar': typeof ApiAvatarServerRoute
  '/api/change-password': typeof ApiChangePasswordServerRoute
  '/api/conditions': typeof ApiConditionsServerRoute
  '/api/counties': typeof ApiCountiesServerRoute
  '/api/credentials': typeof ApiCredentialsServerRoute
  '/api/family-members': typeof ApiFamilyMembersServerRouteWithChildren
  '/api/favorites': typeof ApiFavoritesServerRoute
  '/api/files': typeof ApiFilesServerRoute
  '/api/listings': typeof ApiListingsServerRouteWithChildren
  '/api/localities': typeof ApiLocalitiesServerRouteWithChildren
  '/api/me': typeof ApiMeServerRoute
  '/api/product-categories': typeof ApiProductCategoriesServerRouteWithChildren
  '/api/reports': typeof ApiReportsServerRoute
  '/api/requests': typeof ApiRequestsServerRouteWithChildren
  '/api/school-approval-requests': typeof ApiSchoolApprovalRequestsServerRoute
  '/api/school-setup-requests': typeof ApiSchoolSetupRequestsServerRoute
  '/api/school-submissions': typeof ApiSchoolSubmissionsServerRouteWithChildren
  '/api/schools': typeof ApiSchoolsServerRouteWithChildren
  '/api/shop-options': typeof ApiShopOptionsServerRoute
  '/api/shops': typeof ApiShopsServerRoute
  '/api/test': typeof ApiTestServerRoute
  '/api/upload': typeof ApiUploadServerRoute
  '/api/user-files': typeof ApiUserFilesServerRoute
  '/api/user-profile': typeof ApiUserProfileServerRoute
  '/api/users-approval': typeof ApiUsersApprovalServerRoute
  '/api/admin/analytics': typeof ApiAdminAnalyticsServerRoute
  '/api/admin/dashboard-stats': typeof ApiAdminDashboardStatsServerRoute
  '/api/auth-settings/flag': typeof ApiAuthSettingsFlagServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/admin-exists': typeof ApiAuthAdminExistsServerRoute
  '/api/auth/permissions': typeof ApiAuthPermissionsServerRoute
  '/api/auth/roles-public': typeof ApiAuthRolesPublicServerRoute
  '/api/auth/signup-post-hook': typeof ApiAuthSignupPostHookServerRoute
  '/api/auth/upgrade-first-admin': typeof ApiAuthUpgradeFirstAdminServerRoute
  '/api/branding/active': typeof ApiBrandingActiveServerRoute
  '/api/email/fragments': typeof ApiEmailFragmentsServerRouteWithChildren
  '/api/email/logs': typeof ApiEmailLogsServerRoute
  '/api/email/settings': typeof ApiEmailSettingsServerRoute
  '/api/email/templates': typeof ApiEmailTemplatesServerRouteWithChildren
  '/api/email/test': typeof ApiEmailTestServerRoute
  '/api/family-members/$id': typeof ApiFamilyMembersIdServerRoute
  '/api/listings/$id': typeof ApiListingsIdServerRoute
  '/api/localities/$': typeof ApiLocalitiesSplatServerRoute
  '/api/marketplace/search': typeof ApiMarketplaceSearchServerRoute
  '/api/profiles/familyMembers': typeof ApiProfilesFamilyMembersServerRoute
  '/api/profiles/shop': typeof ApiProfilesShopServerRoute
  '/api/requests/$id': typeof ApiRequestsIdServerRoute
  '/api/roles/$roleId': typeof ApiRolesRoleIdServerRoute
  '/api/roles/seed': typeof ApiRolesSeedServerRoute
  '/api/schools/$id': typeof ApiSchoolsIdServerRoute
  '/api/storage/settings': typeof ApiStorageSettingsServerRoute
  '/api/transactions/$id': typeof ApiTransactionsIdServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
  '/api/users/actions': typeof ApiUsersActionsServerRoute
  '/api/branding/': typeof ApiBrandingIndexServerRoute
  '/api/email/': typeof ApiEmailIndexServerRoute
  '/api/product-types/': typeof ApiProductTypesIndexServerRoute
  '/api/roles/': typeof ApiRolesIndexServerRoute
  '/api/transactions/': typeof ApiTransactionsIndexServerRoute
  '/api/users/': typeof ApiUsersIndexServerRoute
  '/api/email/fragments/default': typeof ApiEmailFragmentsDefaultServerRoute
  '/api/email/templates/preview': typeof ApiEmailTemplatesPreviewServerRoute
  '/api/email/templates/seed-approval': typeof ApiEmailTemplatesSeedApprovalServerRoute
  '/api/email/templates/seed-school-approval': typeof ApiEmailTemplatesSeedSchoolApprovalServerRoute
  '/api/email/templates/seed-school-setup': typeof ApiEmailTemplatesSeedSchoolSetupServerRoute
  '/api/localities/fetch/$': typeof ApiLocalitiesFetchSplatServerRoute
  '/api/product-categories/$categoryId/types': typeof ApiProductCategoriesCategoryIdTypesServerRoute
  '/api/product-types/$id/attributes': typeof ApiProductTypesIdAttributesServerRoute
  '/api/profiles/familyMember/$id': typeof ApiProfilesFamilyMemberIdServerRoute
  '/api/school-submissions/$id/approve': typeof ApiSchoolSubmissionsIdApproveServerRoute
  '/api/school-submissions/$id/reject': typeof ApiSchoolSubmissionsIdRejectServerRoute
  '/api/spipuniform/localities/search': typeof ApiSpipuniformLocalitiesSearchServerRoute
  '/api/transactions/$id/messages': typeof ApiTransactionsIdMessagesServerRoute
  '/api/spipuniform/counties/': typeof ApiSpipuniformCountiesIndexServerRoute
  '/api/spipuniform/localities/': typeof ApiSpipuniformLocalitiesIndexServerRoute
  '/api/spipuniform/school-stock/': typeof ApiSpipuniformSchoolStockIndexServerRoute
  '/api/spipuniform/schools/': typeof ApiSpipuniformSchoolsIndexServerRoute
  '/api/spipuniform/shops/': typeof ApiSpipuniformShopsIndexServerRoute
  '/api/spipuniform/admin/attribute-values/valueId': typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  '/api/spipuniform/admin/attributes/attributeId': typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  '/api/spipuniform/admin/categories/categoryId': typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  '/api/spipuniform/admin/conditions/$id': typeof ApiSpipuniformAdminConditionsIdServerRoute
  '/api/spipuniform/admin/conditions/reorder': typeof ApiSpipuniformAdminConditionsReorderServerRoute
  '/api/spipuniform/admin/product-types/typeId': typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  '/api/spipuniform/admin/attribute-values/': typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  '/api/spipuniform/admin/attributes/': typeof ApiSpipuniformAdminAttributesIndexServerRoute
  '/api/spipuniform/admin/categories/': typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  '/api/spipuniform/admin/conditions/': typeof ApiSpipuniformAdminConditionsIndexServerRoute
  '/api/spipuniform/admin/product-types/': typeof ApiSpipuniformAdminProductTypesIndexServerRoute
  '/api/spipuniform/admin/school-owners/': typeof ApiSpipuniformAdminSchoolOwnersIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/auth-settings'
    | '/api/avatar'
    | '/api/change-password'
    | '/api/conditions'
    | '/api/counties'
    | '/api/credentials'
    | '/api/family-members'
    | '/api/favorites'
    | '/api/files'
    | '/api/listings'
    | '/api/localities'
    | '/api/me'
    | '/api/product-categories'
    | '/api/reports'
    | '/api/requests'
    | '/api/school-approval-requests'
    | '/api/school-setup-requests'
    | '/api/school-submissions'
    | '/api/schools'
    | '/api/shop-options'
    | '/api/shops'
    | '/api/test'
    | '/api/upload'
    | '/api/user-files'
    | '/api/user-profile'
    | '/api/users-approval'
    | '/api/admin/analytics'
    | '/api/admin/dashboard-stats'
    | '/api/auth-settings/flag'
    | '/api/auth/$'
    | '/api/auth/admin-exists'
    | '/api/auth/permissions'
    | '/api/auth/roles-public'
    | '/api/auth/signup-post-hook'
    | '/api/auth/upgrade-first-admin'
    | '/api/branding/active'
    | '/api/email/fragments'
    | '/api/email/logs'
    | '/api/email/settings'
    | '/api/email/templates'
    | '/api/email/test'
    | '/api/family-members/$id'
    | '/api/listings/$id'
    | '/api/localities/$'
    | '/api/marketplace/search'
    | '/api/profiles/familyMembers'
    | '/api/profiles/shop'
    | '/api/requests/$id'
    | '/api/roles/$roleId'
    | '/api/roles/seed'
    | '/api/schools/$id'
    | '/api/storage/settings'
    | '/api/transactions/$id'
    | '/api/users/$userId'
    | '/api/users/actions'
    | '/api/branding'
    | '/api/email'
    | '/api/product-types'
    | '/api/roles'
    | '/api/transactions'
    | '/api/users'
    | '/api/email/fragments/default'
    | '/api/email/templates/preview'
    | '/api/email/templates/seed-approval'
    | '/api/email/templates/seed-school-approval'
    | '/api/email/templates/seed-school-setup'
    | '/api/localities/fetch/$'
    | '/api/product-categories/$categoryId/types'
    | '/api/product-types/$id/attributes'
    | '/api/profiles/familyMember/$id'
    | '/api/school-submissions/$id/approve'
    | '/api/school-submissions/$id/reject'
    | '/api/spipuniform/localities/search'
    | '/api/transactions/$id/messages'
    | '/api/spipuniform/counties'
    | '/api/spipuniform/localities'
    | '/api/spipuniform/school-stock'
    | '/api/spipuniform/schools'
    | '/api/spipuniform/shops'
    | '/api/spipuniform/admin/attribute-values/valueId'
    | '/api/spipuniform/admin/attributes/attributeId'
    | '/api/spipuniform/admin/categories/categoryId'
    | '/api/spipuniform/admin/conditions/$id'
    | '/api/spipuniform/admin/conditions/reorder'
    | '/api/spipuniform/admin/product-types/typeId'
    | '/api/spipuniform/admin/attribute-values'
    | '/api/spipuniform/admin/attributes'
    | '/api/spipuniform/admin/categories'
    | '/api/spipuniform/admin/conditions'
    | '/api/spipuniform/admin/product-types'
    | '/api/spipuniform/admin/school-owners'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/auth-settings'
    | '/api/avatar'
    | '/api/change-password'
    | '/api/conditions'
    | '/api/counties'
    | '/api/credentials'
    | '/api/family-members'
    | '/api/favorites'
    | '/api/files'
    | '/api/listings'
    | '/api/localities'
    | '/api/me'
    | '/api/product-categories'
    | '/api/reports'
    | '/api/requests'
    | '/api/school-approval-requests'
    | '/api/school-setup-requests'
    | '/api/school-submissions'
    | '/api/schools'
    | '/api/shop-options'
    | '/api/shops'
    | '/api/test'
    | '/api/upload'
    | '/api/user-files'
    | '/api/user-profile'
    | '/api/users-approval'
    | '/api/admin/analytics'
    | '/api/admin/dashboard-stats'
    | '/api/auth-settings/flag'
    | '/api/auth/$'
    | '/api/auth/admin-exists'
    | '/api/auth/permissions'
    | '/api/auth/roles-public'
    | '/api/auth/signup-post-hook'
    | '/api/auth/upgrade-first-admin'
    | '/api/branding/active'
    | '/api/email/fragments'
    | '/api/email/logs'
    | '/api/email/settings'
    | '/api/email/templates'
    | '/api/email/test'
    | '/api/family-members/$id'
    | '/api/listings/$id'
    | '/api/localities/$'
    | '/api/marketplace/search'
    | '/api/profiles/familyMembers'
    | '/api/profiles/shop'
    | '/api/requests/$id'
    | '/api/roles/$roleId'
    | '/api/roles/seed'
    | '/api/schools/$id'
    | '/api/storage/settings'
    | '/api/transactions/$id'
    | '/api/users/$userId'
    | '/api/users/actions'
    | '/api/branding'
    | '/api/email'
    | '/api/product-types'
    | '/api/roles'
    | '/api/transactions'
    | '/api/users'
    | '/api/email/fragments/default'
    | '/api/email/templates/preview'
    | '/api/email/templates/seed-approval'
    | '/api/email/templates/seed-school-approval'
    | '/api/email/templates/seed-school-setup'
    | '/api/localities/fetch/$'
    | '/api/product-categories/$categoryId/types'
    | '/api/product-types/$id/attributes'
    | '/api/profiles/familyMember/$id'
    | '/api/school-submissions/$id/approve'
    | '/api/school-submissions/$id/reject'
    | '/api/spipuniform/localities/search'
    | '/api/transactions/$id/messages'
    | '/api/spipuniform/counties'
    | '/api/spipuniform/localities'
    | '/api/spipuniform/school-stock'
    | '/api/spipuniform/schools'
    | '/api/spipuniform/shops'
    | '/api/spipuniform/admin/attribute-values/valueId'
    | '/api/spipuniform/admin/attributes/attributeId'
    | '/api/spipuniform/admin/categories/categoryId'
    | '/api/spipuniform/admin/conditions/$id'
    | '/api/spipuniform/admin/conditions/reorder'
    | '/api/spipuniform/admin/product-types/typeId'
    | '/api/spipuniform/admin/attribute-values'
    | '/api/spipuniform/admin/attributes'
    | '/api/spipuniform/admin/categories'
    | '/api/spipuniform/admin/conditions'
    | '/api/spipuniform/admin/product-types'
    | '/api/spipuniform/admin/school-owners'
  id:
    | '__root__'
    | '/api/auth-settings'
    | '/api/avatar'
    | '/api/change-password'
    | '/api/conditions'
    | '/api/counties'
    | '/api/credentials'
    | '/api/family-members'
    | '/api/favorites'
    | '/api/files'
    | '/api/listings'
    | '/api/localities'
    | '/api/me'
    | '/api/product-categories'
    | '/api/reports'
    | '/api/requests'
    | '/api/school-approval-requests'
    | '/api/school-setup-requests'
    | '/api/school-submissions'
    | '/api/schools'
    | '/api/shop-options'
    | '/api/shops'
    | '/api/test'
    | '/api/upload'
    | '/api/user-files'
    | '/api/user-profile'
    | '/api/users-approval'
    | '/api/admin/analytics'
    | '/api/admin/dashboard-stats'
    | '/api/auth-settings/flag'
    | '/api/auth/$'
    | '/api/auth/admin-exists'
    | '/api/auth/permissions'
    | '/api/auth/roles-public'
    | '/api/auth/signup-post-hook'
    | '/api/auth/upgrade-first-admin'
    | '/api/branding/active'
    | '/api/email/fragments'
    | '/api/email/logs'
    | '/api/email/settings'
    | '/api/email/templates'
    | '/api/email/test'
    | '/api/family-members/$id'
    | '/api/listings/$id'
    | '/api/localities/$'
    | '/api/marketplace/search'
    | '/api/profiles/familyMembers'
    | '/api/profiles/shop'
    | '/api/requests/$id'
    | '/api/roles/$roleId'
    | '/api/roles/seed'
    | '/api/schools/$id'
    | '/api/storage/settings'
    | '/api/transactions/$id'
    | '/api/users/$userId'
    | '/api/users/actions'
    | '/api/branding/'
    | '/api/email/'
    | '/api/product-types/'
    | '/api/roles/'
    | '/api/transactions/'
    | '/api/users/'
    | '/api/email/fragments/default'
    | '/api/email/templates/preview'
    | '/api/email/templates/seed-approval'
    | '/api/email/templates/seed-school-approval'
    | '/api/email/templates/seed-school-setup'
    | '/api/localities/fetch/$'
    | '/api/product-categories/$categoryId/types'
    | '/api/product-types/$id/attributes'
    | '/api/profiles/familyMember/$id'
    | '/api/school-submissions/$id/approve'
    | '/api/school-submissions/$id/reject'
    | '/api/spipuniform/localities/search'
    | '/api/transactions/$id/messages'
    | '/api/spipuniform/counties/'
    | '/api/spipuniform/localities/'
    | '/api/spipuniform/school-stock/'
    | '/api/spipuniform/schools/'
    | '/api/spipuniform/shops/'
    | '/api/spipuniform/admin/attribute-values/valueId'
    | '/api/spipuniform/admin/attributes/attributeId'
    | '/api/spipuniform/admin/categories/categoryId'
    | '/api/spipuniform/admin/conditions/$id'
    | '/api/spipuniform/admin/conditions/reorder'
    | '/api/spipuniform/admin/product-types/typeId'
    | '/api/spipuniform/admin/attribute-values/'
    | '/api/spipuniform/admin/attributes/'
    | '/api/spipuniform/admin/categories/'
    | '/api/spipuniform/admin/conditions/'
    | '/api/spipuniform/admin/product-types/'
    | '/api/spipuniform/admin/school-owners/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSettingsServerRoute: typeof ApiAuthSettingsServerRouteWithChildren
  ApiAvatarServerRoute: typeof ApiAvatarServerRoute
  ApiChangePasswordServerRoute: typeof ApiChangePasswordServerRoute
  ApiConditionsServerRoute: typeof ApiConditionsServerRoute
  ApiCountiesServerRoute: typeof ApiCountiesServerRoute
  ApiCredentialsServerRoute: typeof ApiCredentialsServerRoute
  ApiFamilyMembersServerRoute: typeof ApiFamilyMembersServerRouteWithChildren
  ApiFavoritesServerRoute: typeof ApiFavoritesServerRoute
  ApiFilesServerRoute: typeof ApiFilesServerRoute
  ApiListingsServerRoute: typeof ApiListingsServerRouteWithChildren
  ApiLocalitiesServerRoute: typeof ApiLocalitiesServerRouteWithChildren
  ApiMeServerRoute: typeof ApiMeServerRoute
  ApiProductCategoriesServerRoute: typeof ApiProductCategoriesServerRouteWithChildren
  ApiReportsServerRoute: typeof ApiReportsServerRoute
  ApiRequestsServerRoute: typeof ApiRequestsServerRouteWithChildren
  ApiSchoolApprovalRequestsServerRoute: typeof ApiSchoolApprovalRequestsServerRoute
  ApiSchoolSetupRequestsServerRoute: typeof ApiSchoolSetupRequestsServerRoute
  ApiSchoolSubmissionsServerRoute: typeof ApiSchoolSubmissionsServerRouteWithChildren
  ApiSchoolsServerRoute: typeof ApiSchoolsServerRouteWithChildren
  ApiShopOptionsServerRoute: typeof ApiShopOptionsServerRoute
  ApiShopsServerRoute: typeof ApiShopsServerRoute
  ApiTestServerRoute: typeof ApiTestServerRoute
  ApiUploadServerRoute: typeof ApiUploadServerRoute
  ApiUserFilesServerRoute: typeof ApiUserFilesServerRoute
  ApiUserProfileServerRoute: typeof ApiUserProfileServerRoute
  ApiUsersApprovalServerRoute: typeof ApiUsersApprovalServerRoute
  ApiAdminAnalyticsServerRoute: typeof ApiAdminAnalyticsServerRoute
  ApiAdminDashboardStatsServerRoute: typeof ApiAdminDashboardStatsServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiAuthAdminExistsServerRoute: typeof ApiAuthAdminExistsServerRoute
  ApiAuthPermissionsServerRoute: typeof ApiAuthPermissionsServerRoute
  ApiAuthRolesPublicServerRoute: typeof ApiAuthRolesPublicServerRoute
  ApiAuthSignupPostHookServerRoute: typeof ApiAuthSignupPostHookServerRoute
  ApiAuthUpgradeFirstAdminServerRoute: typeof ApiAuthUpgradeFirstAdminServerRoute
  ApiBrandingActiveServerRoute: typeof ApiBrandingActiveServerRoute
  ApiEmailFragmentsServerRoute: typeof ApiEmailFragmentsServerRouteWithChildren
  ApiEmailLogsServerRoute: typeof ApiEmailLogsServerRoute
  ApiEmailSettingsServerRoute: typeof ApiEmailSettingsServerRoute
  ApiEmailTemplatesServerRoute: typeof ApiEmailTemplatesServerRouteWithChildren
  ApiEmailTestServerRoute: typeof ApiEmailTestServerRoute
  ApiMarketplaceSearchServerRoute: typeof ApiMarketplaceSearchServerRoute
  ApiProfilesFamilyMembersServerRoute: typeof ApiProfilesFamilyMembersServerRoute
  ApiProfilesShopServerRoute: typeof ApiProfilesShopServerRoute
  ApiRolesRoleIdServerRoute: typeof ApiRolesRoleIdServerRoute
  ApiRolesSeedServerRoute: typeof ApiRolesSeedServerRoute
  ApiStorageSettingsServerRoute: typeof ApiStorageSettingsServerRoute
  ApiTransactionsIdServerRoute: typeof ApiTransactionsIdServerRouteWithChildren
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
  ApiUsersActionsServerRoute: typeof ApiUsersActionsServerRoute
  ApiBrandingIndexServerRoute: typeof ApiBrandingIndexServerRoute
  ApiEmailIndexServerRoute: typeof ApiEmailIndexServerRoute
  ApiProductTypesIndexServerRoute: typeof ApiProductTypesIndexServerRoute
  ApiRolesIndexServerRoute: typeof ApiRolesIndexServerRoute
  ApiTransactionsIndexServerRoute: typeof ApiTransactionsIndexServerRoute
  ApiUsersIndexServerRoute: typeof ApiUsersIndexServerRoute
  ApiProductTypesIdAttributesServerRoute: typeof ApiProductTypesIdAttributesServerRoute
  ApiProfilesFamilyMemberIdServerRoute: typeof ApiProfilesFamilyMemberIdServerRoute
  ApiSpipuniformLocalitiesSearchServerRoute: typeof ApiSpipuniformLocalitiesSearchServerRoute
  ApiSpipuniformCountiesIndexServerRoute: typeof ApiSpipuniformCountiesIndexServerRoute
  ApiSpipuniformLocalitiesIndexServerRoute: typeof ApiSpipuniformLocalitiesIndexServerRoute
  ApiSpipuniformSchoolStockIndexServerRoute: typeof ApiSpipuniformSchoolStockIndexServerRoute
  ApiSpipuniformSchoolsIndexServerRoute: typeof ApiSpipuniformSchoolsIndexServerRoute
  ApiSpipuniformShopsIndexServerRoute: typeof ApiSpipuniformShopsIndexServerRoute
  ApiSpipuniformAdminAttributeValuesValueIdServerRoute: typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  ApiSpipuniformAdminAttributesAttributeIdServerRoute: typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  ApiSpipuniformAdminCategoriesCategoryIdServerRoute: typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  ApiSpipuniformAdminConditionsIdServerRoute: typeof ApiSpipuniformAdminConditionsIdServerRoute
  ApiSpipuniformAdminConditionsReorderServerRoute: typeof ApiSpipuniformAdminConditionsReorderServerRoute
  ApiSpipuniformAdminProductTypesTypeIdServerRoute: typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  ApiSpipuniformAdminAttributeValuesIndexServerRoute: typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  ApiSpipuniformAdminAttributesIndexServerRoute: typeof ApiSpipuniformAdminAttributesIndexServerRoute
  ApiSpipuniformAdminCategoriesIndexServerRoute: typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  ApiSpipuniformAdminConditionsIndexServerRoute: typeof ApiSpipuniformAdminConditionsIndexServerRoute
  ApiSpipuniformAdminProductTypesIndexServerRoute: typeof ApiSpipuniformAdminProductTypesIndexServerRoute
  ApiSpipuniformAdminSchoolOwnersIndexServerRoute: typeof ApiSpipuniformAdminSchoolOwnersIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/marketplace/requests': {
      id: '/marketplace/requests'
      path: '/marketplace/requests'
      fullPath: '/marketplace/requests'
      preLoaderRoute: typeof MarketplaceRequestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/my-listings': {
      id: '/marketplace/my-listings'
      path: '/marketplace/my-listings'
      fullPath: '/marketplace/my-listings'
      preLoaderRoute: typeof MarketplaceMyListingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/messages': {
      id: '/marketplace/messages'
      path: '/marketplace/messages'
      fullPath: '/marketplace/messages'
      preLoaderRoute: typeof MarketplaceMessagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/favorites': {
      id: '/marketplace/favorites'
      path: '/marketplace/favorites'
      fullPath: '/marketplace/favorites'
      preLoaderRoute: typeof MarketplaceFavoritesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/create': {
      id: '/marketplace/create'
      path: '/marketplace/create'
      fullPath: '/marketplace/create'
      preLoaderRoute: typeof MarketplaceCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/browse': {
      id: '/marketplace/browse'
      path: '/marketplace/browse'
      fullPath: '/marketplace/browse'
      preLoaderRoute: typeof MarketplaceBrowseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/storage-settings': {
      id: '/dashboard/storage-settings'
      path: '/storage-settings'
      fullPath: '/dashboard/storage-settings'
      preLoaderRoute: typeof DashboardStorageSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/requests': {
      id: '/dashboard/requests'
      path: '/requests'
      fullPath: '/dashboard/requests'
      preLoaderRoute: typeof DashboardRequestsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/parent': {
      id: '/dashboard/parent'
      path: '/parent'
      fullPath: '/dashboard/parent'
      preLoaderRoute: typeof DashboardParentRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/file-manager': {
      id: '/dashboard/file-manager'
      path: '/file-manager'
      fullPath: '/dashboard/file-manager'
      preLoaderRoute: typeof DashboardFileManagerRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/email': {
      id: '/dashboard/email'
      path: '/email'
      fullPath: '/dashboard/email'
      preLoaderRoute: typeof DashboardEmailRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/branding': {
      id: '/dashboard/branding'
      path: '/branding'
      fullPath: '/dashboard/branding'
      preLoaderRoute: typeof DashboardBrandingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/pending': {
      id: '/auth/pending'
      path: '/auth/pending'
      fullPath: '/auth/pending'
      preLoaderRoute: typeof AuthPendingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user-management/': {
      id: '/dashboard/user-management/'
      path: '/user-management'
      fullPath: '/dashboard/user-management'
      preLoaderRoute: typeof DashboardUserManagementIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/': {
      id: '/dashboard/spipuniform/'
      path: '/spipuniform'
      fullPath: '/dashboard/spipuniform'
      preLoaderRoute: typeof DashboardSpipuniformIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/': {
      id: '/dashboard/profile/'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/marketplace/requests/$id': {
      id: '/marketplace/requests/$id'
      path: '/$id'
      fullPath: '/marketplace/requests/$id'
      preLoaderRoute: typeof MarketplaceRequestsIdRouteImport
      parentRoute: typeof MarketplaceRequestsRoute
    }
    '/marketplace/listings/$id': {
      id: '/marketplace/listings/$id'
      path: '/marketplace/listings/$id'
      fullPath: '/marketplace/listings/$id'
      preLoaderRoute: typeof MarketplaceListingsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user-management/users': {
      id: '/dashboard/user-management/users'
      path: '/user-management/users'
      fullPath: '/dashboard/user-management/users'
      preLoaderRoute: typeof DashboardUserManagementUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/roles': {
      id: '/dashboard/user-management/roles'
      path: '/user-management/roles'
      fullPath: '/dashboard/user-management/roles'
      preLoaderRoute: typeof DashboardUserManagementRolesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/permissions': {
      id: '/dashboard/user-management/permissions'
      path: '/user-management/permissions'
      fullPath: '/dashboard/user-management/permissions'
      preLoaderRoute: typeof DashboardUserManagementPermissionsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/consolidated': {
      id: '/dashboard/user-management/consolidated'
      path: '/user-management/consolidated'
      fullPath: '/dashboard/user-management/consolidated'
      preLoaderRoute: typeof DashboardUserManagementConsolidatedRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/shop': {
      id: '/dashboard/spipuniform/shop'
      path: '/spipuniform/shop'
      fullPath: '/dashboard/spipuniform/shop'
      preLoaderRoute: typeof DashboardSpipuniformShopRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/schools': {
      id: '/dashboard/spipuniform/schools'
      path: '/spipuniform/schools'
      fullPath: '/dashboard/spipuniform/schools'
      preLoaderRoute: typeof DashboardSpipuniformSchoolsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/school-stock': {
      id: '/dashboard/spipuniform/school-stock'
      path: '/spipuniform/school-stock'
      fullPath: '/dashboard/spipuniform/school-stock'
      preLoaderRoute: typeof DashboardSpipuniformSchoolStockRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/data-verification': {
      id: '/dashboard/spipuniform/data-verification'
      path: '/spipuniform/data-verification'
      fullPath: '/dashboard/spipuniform/data-verification'
      preLoaderRoute: typeof DashboardSpipuniformDataVerificationRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/shop-old': {
      id: '/dashboard/profile/shop-old'
      path: '/profile/shop-old'
      fullPath: '/dashboard/profile/shop-old'
      preLoaderRoute: typeof DashboardProfileShopOldRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/shop': {
      id: '/dashboard/profile/shop'
      path: '/profile/shop'
      fullPath: '/dashboard/profile/shop'
      preLoaderRoute: typeof DashboardProfileShopRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/family': {
      id: '/dashboard/profile/family'
      path: '/profile/family'
      fullPath: '/dashboard/profile/family'
      preLoaderRoute: typeof DashboardProfileFamilyRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/types': {
      id: '/dashboard/spipuniform/products/types'
      path: '/spipuniform/products/types'
      fullPath: '/dashboard/spipuniform/products/types'
      preLoaderRoute: typeof DashboardSpipuniformProductsTypesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/conditions': {
      id: '/dashboard/spipuniform/products/conditions'
      path: '/spipuniform/products/conditions'
      fullPath: '/dashboard/spipuniform/products/conditions'
      preLoaderRoute: typeof DashboardSpipuniformProductsConditionsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/categories': {
      id: '/dashboard/spipuniform/products/categories'
      path: '/spipuniform/products/categories'
      fullPath: '/dashboard/spipuniform/products/categories'
      preLoaderRoute: typeof DashboardSpipuniformProductsCategoriesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/attributes': {
      id: '/dashboard/spipuniform/products/attributes'
      path: '/spipuniform/products/attributes'
      fullPath: '/dashboard/spipuniform/products/attributes'
      preLoaderRoute: typeof DashboardSpipuniformProductsAttributesRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/users-approval': {
      id: '/api/users-approval'
      path: '/api/users-approval'
      fullPath: '/api/users-approval'
      preLoaderRoute: typeof ApiUsersApprovalServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/user-profile': {
      id: '/api/user-profile'
      path: '/api/user-profile'
      fullPath: '/api/user-profile'
      preLoaderRoute: typeof ApiUserProfileServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/user-files': {
      id: '/api/user-files'
      path: '/api/user-files'
      fullPath: '/api/user-files'
      preLoaderRoute: typeof ApiUserFilesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/upload': {
      id: '/api/upload'
      path: '/api/upload'
      fullPath: '/api/upload'
      preLoaderRoute: typeof ApiUploadServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/test': {
      id: '/api/test'
      path: '/api/test'
      fullPath: '/api/test'
      preLoaderRoute: typeof ApiTestServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/shops': {
      id: '/api/shops'
      path: '/api/shops'
      fullPath: '/api/shops'
      preLoaderRoute: typeof ApiShopsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/shop-options': {
      id: '/api/shop-options'
      path: '/api/shop-options'
      fullPath: '/api/shop-options'
      preLoaderRoute: typeof ApiShopOptionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/schools': {
      id: '/api/schools'
      path: '/api/schools'
      fullPath: '/api/schools'
      preLoaderRoute: typeof ApiSchoolsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/school-submissions': {
      id: '/api/school-submissions'
      path: '/api/school-submissions'
      fullPath: '/api/school-submissions'
      preLoaderRoute: typeof ApiSchoolSubmissionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/school-setup-requests': {
      id: '/api/school-setup-requests'
      path: '/api/school-setup-requests'
      fullPath: '/api/school-setup-requests'
      preLoaderRoute: typeof ApiSchoolSetupRequestsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/school-approval-requests': {
      id: '/api/school-approval-requests'
      path: '/api/school-approval-requests'
      fullPath: '/api/school-approval-requests'
      preLoaderRoute: typeof ApiSchoolApprovalRequestsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/requests': {
      id: '/api/requests'
      path: '/api/requests'
      fullPath: '/api/requests'
      preLoaderRoute: typeof ApiRequestsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/reports': {
      id: '/api/reports'
      path: '/api/reports'
      fullPath: '/api/reports'
      preLoaderRoute: typeof ApiReportsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/product-categories': {
      id: '/api/product-categories'
      path: '/api/product-categories'
      fullPath: '/api/product-categories'
      preLoaderRoute: typeof ApiProductCategoriesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/me': {
      id: '/api/me'
      path: '/api/me'
      fullPath: '/api/me'
      preLoaderRoute: typeof ApiMeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/localities': {
      id: '/api/localities'
      path: '/api/localities'
      fullPath: '/api/localities'
      preLoaderRoute: typeof ApiLocalitiesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/listings': {
      id: '/api/listings'
      path: '/api/listings'
      fullPath: '/api/listings'
      preLoaderRoute: typeof ApiListingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/files': {
      id: '/api/files'
      path: '/api/files'
      fullPath: '/api/files'
      preLoaderRoute: typeof ApiFilesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/favorites': {
      id: '/api/favorites'
      path: '/api/favorites'
      fullPath: '/api/favorites'
      preLoaderRoute: typeof ApiFavoritesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/family-members': {
      id: '/api/family-members'
      path: '/api/family-members'
      fullPath: '/api/family-members'
      preLoaderRoute: typeof ApiFamilyMembersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/credentials': {
      id: '/api/credentials'
      path: '/api/credentials'
      fullPath: '/api/credentials'
      preLoaderRoute: typeof ApiCredentialsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/counties': {
      id: '/api/counties'
      path: '/api/counties'
      fullPath: '/api/counties'
      preLoaderRoute: typeof ApiCountiesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/conditions': {
      id: '/api/conditions'
      path: '/api/conditions'
      fullPath: '/api/conditions'
      preLoaderRoute: typeof ApiConditionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/change-password': {
      id: '/api/change-password'
      path: '/api/change-password'
      fullPath: '/api/change-password'
      preLoaderRoute: typeof ApiChangePasswordServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatar': {
      id: '/api/avatar'
      path: '/api/avatar'
      fullPath: '/api/avatar'
      preLoaderRoute: typeof ApiAvatarServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth-settings': {
      id: '/api/auth-settings'
      path: '/api/auth-settings'
      fullPath: '/api/auth-settings'
      preLoaderRoute: typeof ApiAuthSettingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/': {
      id: '/api/users/'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/transactions/': {
      id: '/api/transactions/'
      path: '/api/transactions'
      fullPath: '/api/transactions'
      preLoaderRoute: typeof ApiTransactionsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/roles/': {
      id: '/api/roles/'
      path: '/api/roles'
      fullPath: '/api/roles'
      preLoaderRoute: typeof ApiRolesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/product-types/': {
      id: '/api/product-types/'
      path: '/api/product-types'
      fullPath: '/api/product-types'
      preLoaderRoute: typeof ApiProductTypesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/': {
      id: '/api/email/'
      path: '/api/email'
      fullPath: '/api/email'
      preLoaderRoute: typeof ApiEmailIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/branding/': {
      id: '/api/branding/'
      path: '/api/branding'
      fullPath: '/api/branding'
      preLoaderRoute: typeof ApiBrandingIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/actions': {
      id: '/api/users/actions'
      path: '/api/users/actions'
      fullPath: '/api/users/actions'
      preLoaderRoute: typeof ApiUsersActionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/api/users/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/transactions/$id': {
      id: '/api/transactions/$id'
      path: '/api/transactions/$id'
      fullPath: '/api/transactions/$id'
      preLoaderRoute: typeof ApiTransactionsIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/storage/settings': {
      id: '/api/storage/settings'
      path: '/api/storage/settings'
      fullPath: '/api/storage/settings'
      preLoaderRoute: typeof ApiStorageSettingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/schools/$id': {
      id: '/api/schools/$id'
      path: '/$id'
      fullPath: '/api/schools/$id'
      preLoaderRoute: typeof ApiSchoolsIdServerRouteImport
      parentRoute: typeof ApiSchoolsServerRoute
    }
    '/api/roles/seed': {
      id: '/api/roles/seed'
      path: '/api/roles/seed'
      fullPath: '/api/roles/seed'
      preLoaderRoute: typeof ApiRolesSeedServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/roles/$roleId': {
      id: '/api/roles/$roleId'
      path: '/api/roles/$roleId'
      fullPath: '/api/roles/$roleId'
      preLoaderRoute: typeof ApiRolesRoleIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/requests/$id': {
      id: '/api/requests/$id'
      path: '/$id'
      fullPath: '/api/requests/$id'
      preLoaderRoute: typeof ApiRequestsIdServerRouteImport
      parentRoute: typeof ApiRequestsServerRoute
    }
    '/api/profiles/shop': {
      id: '/api/profiles/shop'
      path: '/api/profiles/shop'
      fullPath: '/api/profiles/shop'
      preLoaderRoute: typeof ApiProfilesShopServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/profiles/familyMembers': {
      id: '/api/profiles/familyMembers'
      path: '/api/profiles/familyMembers'
      fullPath: '/api/profiles/familyMembers'
      preLoaderRoute: typeof ApiProfilesFamilyMembersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/marketplace/search': {
      id: '/api/marketplace/search'
      path: '/api/marketplace/search'
      fullPath: '/api/marketplace/search'
      preLoaderRoute: typeof ApiMarketplaceSearchServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/localities/$': {
      id: '/api/localities/$'
      path: '/$'
      fullPath: '/api/localities/$'
      preLoaderRoute: typeof ApiLocalitiesSplatServerRouteImport
      parentRoute: typeof ApiLocalitiesServerRoute
    }
    '/api/listings/$id': {
      id: '/api/listings/$id'
      path: '/$id'
      fullPath: '/api/listings/$id'
      preLoaderRoute: typeof ApiListingsIdServerRouteImport
      parentRoute: typeof ApiListingsServerRoute
    }
    '/api/family-members/$id': {
      id: '/api/family-members/$id'
      path: '/$id'
      fullPath: '/api/family-members/$id'
      preLoaderRoute: typeof ApiFamilyMembersIdServerRouteImport
      parentRoute: typeof ApiFamilyMembersServerRoute
    }
    '/api/email/test': {
      id: '/api/email/test'
      path: '/api/email/test'
      fullPath: '/api/email/test'
      preLoaderRoute: typeof ApiEmailTestServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/templates': {
      id: '/api/email/templates'
      path: '/api/email/templates'
      fullPath: '/api/email/templates'
      preLoaderRoute: typeof ApiEmailTemplatesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/settings': {
      id: '/api/email/settings'
      path: '/api/email/settings'
      fullPath: '/api/email/settings'
      preLoaderRoute: typeof ApiEmailSettingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/logs': {
      id: '/api/email/logs'
      path: '/api/email/logs'
      fullPath: '/api/email/logs'
      preLoaderRoute: typeof ApiEmailLogsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/fragments': {
      id: '/api/email/fragments'
      path: '/api/email/fragments'
      fullPath: '/api/email/fragments'
      preLoaderRoute: typeof ApiEmailFragmentsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/branding/active': {
      id: '/api/branding/active'
      path: '/api/branding/active'
      fullPath: '/api/branding/active'
      preLoaderRoute: typeof ApiBrandingActiveServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/upgrade-first-admin': {
      id: '/api/auth/upgrade-first-admin'
      path: '/api/auth/upgrade-first-admin'
      fullPath: '/api/auth/upgrade-first-admin'
      preLoaderRoute: typeof ApiAuthUpgradeFirstAdminServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/signup-post-hook': {
      id: '/api/auth/signup-post-hook'
      path: '/api/auth/signup-post-hook'
      fullPath: '/api/auth/signup-post-hook'
      preLoaderRoute: typeof ApiAuthSignupPostHookServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/roles-public': {
      id: '/api/auth/roles-public'
      path: '/api/auth/roles-public'
      fullPath: '/api/auth/roles-public'
      preLoaderRoute: typeof ApiAuthRolesPublicServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/permissions': {
      id: '/api/auth/permissions'
      path: '/api/auth/permissions'
      fullPath: '/api/auth/permissions'
      preLoaderRoute: typeof ApiAuthPermissionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/admin-exists': {
      id: '/api/auth/admin-exists'
      path: '/api/auth/admin-exists'
      fullPath: '/api/auth/admin-exists'
      preLoaderRoute: typeof ApiAuthAdminExistsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth-settings/flag': {
      id: '/api/auth-settings/flag'
      path: '/flag'
      fullPath: '/api/auth-settings/flag'
      preLoaderRoute: typeof ApiAuthSettingsFlagServerRouteImport
      parentRoute: typeof ApiAuthSettingsServerRoute
    }
    '/api/admin/dashboard-stats': {
      id: '/api/admin/dashboard-stats'
      path: '/api/admin/dashboard-stats'
      fullPath: '/api/admin/dashboard-stats'
      preLoaderRoute: typeof ApiAdminDashboardStatsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/analytics': {
      id: '/api/admin/analytics'
      path: '/api/admin/analytics'
      fullPath: '/api/admin/analytics'
      preLoaderRoute: typeof ApiAdminAnalyticsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/shops/': {
      id: '/api/spipuniform/shops/'
      path: '/api/spipuniform/shops'
      fullPath: '/api/spipuniform/shops'
      preLoaderRoute: typeof ApiSpipuniformShopsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/schools/': {
      id: '/api/spipuniform/schools/'
      path: '/api/spipuniform/schools'
      fullPath: '/api/spipuniform/schools'
      preLoaderRoute: typeof ApiSpipuniformSchoolsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/school-stock/': {
      id: '/api/spipuniform/school-stock/'
      path: '/api/spipuniform/school-stock'
      fullPath: '/api/spipuniform/school-stock'
      preLoaderRoute: typeof ApiSpipuniformSchoolStockIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/localities/': {
      id: '/api/spipuniform/localities/'
      path: '/api/spipuniform/localities'
      fullPath: '/api/spipuniform/localities'
      preLoaderRoute: typeof ApiSpipuniformLocalitiesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/counties/': {
      id: '/api/spipuniform/counties/'
      path: '/api/spipuniform/counties'
      fullPath: '/api/spipuniform/counties'
      preLoaderRoute: typeof ApiSpipuniformCountiesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/transactions/$id/messages': {
      id: '/api/transactions/$id/messages'
      path: '/messages'
      fullPath: '/api/transactions/$id/messages'
      preLoaderRoute: typeof ApiTransactionsIdMessagesServerRouteImport
      parentRoute: typeof ApiTransactionsIdServerRoute
    }
    '/api/spipuniform/localities/search': {
      id: '/api/spipuniform/localities/search'
      path: '/api/spipuniform/localities/search'
      fullPath: '/api/spipuniform/localities/search'
      preLoaderRoute: typeof ApiSpipuniformLocalitiesSearchServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/school-submissions/$id/reject': {
      id: '/api/school-submissions/$id/reject'
      path: '/$id/reject'
      fullPath: '/api/school-submissions/$id/reject'
      preLoaderRoute: typeof ApiSchoolSubmissionsIdRejectServerRouteImport
      parentRoute: typeof ApiSchoolSubmissionsServerRoute
    }
    '/api/school-submissions/$id/approve': {
      id: '/api/school-submissions/$id/approve'
      path: '/$id/approve'
      fullPath: '/api/school-submissions/$id/approve'
      preLoaderRoute: typeof ApiSchoolSubmissionsIdApproveServerRouteImport
      parentRoute: typeof ApiSchoolSubmissionsServerRoute
    }
    '/api/profiles/familyMember/$id': {
      id: '/api/profiles/familyMember/$id'
      path: '/api/profiles/familyMember/$id'
      fullPath: '/api/profiles/familyMember/$id'
      preLoaderRoute: typeof ApiProfilesFamilyMemberIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/product-types/$id/attributes': {
      id: '/api/product-types/$id/attributes'
      path: '/api/product-types/$id/attributes'
      fullPath: '/api/product-types/$id/attributes'
      preLoaderRoute: typeof ApiProductTypesIdAttributesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/product-categories/$categoryId/types': {
      id: '/api/product-categories/$categoryId/types'
      path: '/$categoryId/types'
      fullPath: '/api/product-categories/$categoryId/types'
      preLoaderRoute: typeof ApiProductCategoriesCategoryIdTypesServerRouteImport
      parentRoute: typeof ApiProductCategoriesServerRoute
    }
    '/api/localities/fetch/$': {
      id: '/api/localities/fetch/$'
      path: '/fetch/$'
      fullPath: '/api/localities/fetch/$'
      preLoaderRoute: typeof ApiLocalitiesFetchSplatServerRouteImport
      parentRoute: typeof ApiLocalitiesServerRoute
    }
    '/api/email/templates/seed-school-setup': {
      id: '/api/email/templates/seed-school-setup'
      path: '/seed-school-setup'
      fullPath: '/api/email/templates/seed-school-setup'
      preLoaderRoute: typeof ApiEmailTemplatesSeedSchoolSetupServerRouteImport
      parentRoute: typeof ApiEmailTemplatesServerRoute
    }
    '/api/email/templates/seed-school-approval': {
      id: '/api/email/templates/seed-school-approval'
      path: '/seed-school-approval'
      fullPath: '/api/email/templates/seed-school-approval'
      preLoaderRoute: typeof ApiEmailTemplatesSeedSchoolApprovalServerRouteImport
      parentRoute: typeof ApiEmailTemplatesServerRoute
    }
    '/api/email/templates/seed-approval': {
      id: '/api/email/templates/seed-approval'
      path: '/seed-approval'
      fullPath: '/api/email/templates/seed-approval'
      preLoaderRoute: typeof ApiEmailTemplatesSeedApprovalServerRouteImport
      parentRoute: typeof ApiEmailTemplatesServerRoute
    }
    '/api/email/templates/preview': {
      id: '/api/email/templates/preview'
      path: '/preview'
      fullPath: '/api/email/templates/preview'
      preLoaderRoute: typeof ApiEmailTemplatesPreviewServerRouteImport
      parentRoute: typeof ApiEmailTemplatesServerRoute
    }
    '/api/email/fragments/default': {
      id: '/api/email/fragments/default'
      path: '/default'
      fullPath: '/api/email/fragments/default'
      preLoaderRoute: typeof ApiEmailFragmentsDefaultServerRouteImport
      parentRoute: typeof ApiEmailFragmentsServerRoute
    }
    '/api/spipuniform/admin/school-owners/': {
      id: '/api/spipuniform/admin/school-owners/'
      path: '/api/spipuniform/admin/school-owners'
      fullPath: '/api/spipuniform/admin/school-owners'
      preLoaderRoute: typeof ApiSpipuniformAdminSchoolOwnersIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/product-types/': {
      id: '/api/spipuniform/admin/product-types/'
      path: '/api/spipuniform/admin/product-types'
      fullPath: '/api/spipuniform/admin/product-types'
      preLoaderRoute: typeof ApiSpipuniformAdminProductTypesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/conditions/': {
      id: '/api/spipuniform/admin/conditions/'
      path: '/api/spipuniform/admin/conditions'
      fullPath: '/api/spipuniform/admin/conditions'
      preLoaderRoute: typeof ApiSpipuniformAdminConditionsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/categories/': {
      id: '/api/spipuniform/admin/categories/'
      path: '/api/spipuniform/admin/categories'
      fullPath: '/api/spipuniform/admin/categories'
      preLoaderRoute: typeof ApiSpipuniformAdminCategoriesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attributes/': {
      id: '/api/spipuniform/admin/attributes/'
      path: '/api/spipuniform/admin/attributes'
      fullPath: '/api/spipuniform/admin/attributes'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attribute-values/': {
      id: '/api/spipuniform/admin/attribute-values/'
      path: '/api/spipuniform/admin/attribute-values'
      fullPath: '/api/spipuniform/admin/attribute-values'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributeValuesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/product-types/typeId': {
      id: '/api/spipuniform/admin/product-types/typeId'
      path: '/api/spipuniform/admin/product-types/typeId'
      fullPath: '/api/spipuniform/admin/product-types/typeId'
      preLoaderRoute: typeof ApiSpipuniformAdminProductTypesTypeIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/conditions/reorder': {
      id: '/api/spipuniform/admin/conditions/reorder'
      path: '/api/spipuniform/admin/conditions/reorder'
      fullPath: '/api/spipuniform/admin/conditions/reorder'
      preLoaderRoute: typeof ApiSpipuniformAdminConditionsReorderServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/conditions/$id': {
      id: '/api/spipuniform/admin/conditions/$id'
      path: '/api/spipuniform/admin/conditions/$id'
      fullPath: '/api/spipuniform/admin/conditions/$id'
      preLoaderRoute: typeof ApiSpipuniformAdminConditionsIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/categories/categoryId': {
      id: '/api/spipuniform/admin/categories/categoryId'
      path: '/api/spipuniform/admin/categories/categoryId'
      fullPath: '/api/spipuniform/admin/categories/categoryId'
      preLoaderRoute: typeof ApiSpipuniformAdminCategoriesCategoryIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attributes/attributeId': {
      id: '/api/spipuniform/admin/attributes/attributeId'
      path: '/api/spipuniform/admin/attributes/attributeId'
      fullPath: '/api/spipuniform/admin/attributes/attributeId'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributesAttributeIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attribute-values/valueId': {
      id: '/api/spipuniform/admin/attribute-values/valueId'
      path: '/api/spipuniform/admin/attribute-values/valueId'
      fullPath: '/api/spipuniform/admin/attribute-values/valueId'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributeValuesValueIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardBrandingRoute: typeof DashboardBrandingRoute
  DashboardEmailRoute: typeof DashboardEmailRoute
  DashboardFileManagerRoute: typeof DashboardFileManagerRoute
  DashboardParentRoute: typeof DashboardParentRoute
  DashboardRequestsRoute: typeof DashboardRequestsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardStorageSettingsRoute: typeof DashboardStorageSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProfileFamilyRoute: typeof DashboardProfileFamilyRoute
  DashboardProfileShopRoute: typeof DashboardProfileShopRoute
  DashboardProfileShopOldRoute: typeof DashboardProfileShopOldRoute
  DashboardSpipuniformDataVerificationRoute: typeof DashboardSpipuniformDataVerificationRoute
  DashboardSpipuniformSchoolStockRoute: typeof DashboardSpipuniformSchoolStockRoute
  DashboardSpipuniformSchoolsRoute: typeof DashboardSpipuniformSchoolsRoute
  DashboardSpipuniformShopRoute: typeof DashboardSpipuniformShopRoute
  DashboardUserManagementConsolidatedRoute: typeof DashboardUserManagementConsolidatedRoute
  DashboardUserManagementPermissionsRoute: typeof DashboardUserManagementPermissionsRoute
  DashboardUserManagementRolesRoute: typeof DashboardUserManagementRolesRoute
  DashboardUserManagementUsersRoute: typeof DashboardUserManagementUsersRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
  DashboardSpipuniformIndexRoute: typeof DashboardSpipuniformIndexRoute
  DashboardUserManagementIndexRoute: typeof DashboardUserManagementIndexRoute
  DashboardSpipuniformProductsAttributesRoute: typeof DashboardSpipuniformProductsAttributesRoute
  DashboardSpipuniformProductsCategoriesRoute: typeof DashboardSpipuniformProductsCategoriesRoute
  DashboardSpipuniformProductsConditionsRoute: typeof DashboardSpipuniformProductsConditionsRoute
  DashboardSpipuniformProductsTypesRoute: typeof DashboardSpipuniformProductsTypesRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardBrandingRoute: DashboardBrandingRoute,
  DashboardEmailRoute: DashboardEmailRoute,
  DashboardFileManagerRoute: DashboardFileManagerRoute,
  DashboardParentRoute: DashboardParentRoute,
  DashboardRequestsRoute: DashboardRequestsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardStorageSettingsRoute: DashboardStorageSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProfileFamilyRoute: DashboardProfileFamilyRoute,
  DashboardProfileShopRoute: DashboardProfileShopRoute,
  DashboardProfileShopOldRoute: DashboardProfileShopOldRoute,
  DashboardSpipuniformDataVerificationRoute:
    DashboardSpipuniformDataVerificationRoute,
  DashboardSpipuniformSchoolStockRoute: DashboardSpipuniformSchoolStockRoute,
  DashboardSpipuniformSchoolsRoute: DashboardSpipuniformSchoolsRoute,
  DashboardSpipuniformShopRoute: DashboardSpipuniformShopRoute,
  DashboardUserManagementConsolidatedRoute:
    DashboardUserManagementConsolidatedRoute,
  DashboardUserManagementPermissionsRoute:
    DashboardUserManagementPermissionsRoute,
  DashboardUserManagementRolesRoute: DashboardUserManagementRolesRoute,
  DashboardUserManagementUsersRoute: DashboardUserManagementUsersRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
  DashboardSpipuniformIndexRoute: DashboardSpipuniformIndexRoute,
  DashboardUserManagementIndexRoute: DashboardUserManagementIndexRoute,
  DashboardSpipuniformProductsAttributesRoute:
    DashboardSpipuniformProductsAttributesRoute,
  DashboardSpipuniformProductsCategoriesRoute:
    DashboardSpipuniformProductsCategoriesRoute,
  DashboardSpipuniformProductsConditionsRoute:
    DashboardSpipuniformProductsConditionsRoute,
  DashboardSpipuniformProductsTypesRoute:
    DashboardSpipuniformProductsTypesRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface MarketplaceRequestsRouteChildren {
  MarketplaceRequestsIdRoute: typeof MarketplaceRequestsIdRoute
}

const MarketplaceRequestsRouteChildren: MarketplaceRequestsRouteChildren = {
  MarketplaceRequestsIdRoute: MarketplaceRequestsIdRoute,
}

const MarketplaceRequestsRouteWithChildren =
  MarketplaceRequestsRoute._addFileChildren(MarketplaceRequestsRouteChildren)

interface ApiAuthSettingsServerRouteChildren {
  ApiAuthSettingsFlagServerRoute: typeof ApiAuthSettingsFlagServerRoute
}

const ApiAuthSettingsServerRouteChildren: ApiAuthSettingsServerRouteChildren = {
  ApiAuthSettingsFlagServerRoute: ApiAuthSettingsFlagServerRoute,
}

const ApiAuthSettingsServerRouteWithChildren =
  ApiAuthSettingsServerRoute._addFileChildren(
    ApiAuthSettingsServerRouteChildren,
  )

interface ApiFamilyMembersServerRouteChildren {
  ApiFamilyMembersIdServerRoute: typeof ApiFamilyMembersIdServerRoute
}

const ApiFamilyMembersServerRouteChildren: ApiFamilyMembersServerRouteChildren =
  {
    ApiFamilyMembersIdServerRoute: ApiFamilyMembersIdServerRoute,
  }

const ApiFamilyMembersServerRouteWithChildren =
  ApiFamilyMembersServerRoute._addFileChildren(
    ApiFamilyMembersServerRouteChildren,
  )

interface ApiListingsServerRouteChildren {
  ApiListingsIdServerRoute: typeof ApiListingsIdServerRoute
}

const ApiListingsServerRouteChildren: ApiListingsServerRouteChildren = {
  ApiListingsIdServerRoute: ApiListingsIdServerRoute,
}

const ApiListingsServerRouteWithChildren =
  ApiListingsServerRoute._addFileChildren(ApiListingsServerRouteChildren)

interface ApiLocalitiesServerRouteChildren {
  ApiLocalitiesSplatServerRoute: typeof ApiLocalitiesSplatServerRoute
  ApiLocalitiesFetchSplatServerRoute: typeof ApiLocalitiesFetchSplatServerRoute
}

const ApiLocalitiesServerRouteChildren: ApiLocalitiesServerRouteChildren = {
  ApiLocalitiesSplatServerRoute: ApiLocalitiesSplatServerRoute,
  ApiLocalitiesFetchSplatServerRoute: ApiLocalitiesFetchSplatServerRoute,
}

const ApiLocalitiesServerRouteWithChildren =
  ApiLocalitiesServerRoute._addFileChildren(ApiLocalitiesServerRouteChildren)

interface ApiProductCategoriesServerRouteChildren {
  ApiProductCategoriesCategoryIdTypesServerRoute: typeof ApiProductCategoriesCategoryIdTypesServerRoute
}

const ApiProductCategoriesServerRouteChildren: ApiProductCategoriesServerRouteChildren =
  {
    ApiProductCategoriesCategoryIdTypesServerRoute:
      ApiProductCategoriesCategoryIdTypesServerRoute,
  }

const ApiProductCategoriesServerRouteWithChildren =
  ApiProductCategoriesServerRoute._addFileChildren(
    ApiProductCategoriesServerRouteChildren,
  )

interface ApiRequestsServerRouteChildren {
  ApiRequestsIdServerRoute: typeof ApiRequestsIdServerRoute
}

const ApiRequestsServerRouteChildren: ApiRequestsServerRouteChildren = {
  ApiRequestsIdServerRoute: ApiRequestsIdServerRoute,
}

const ApiRequestsServerRouteWithChildren =
  ApiRequestsServerRoute._addFileChildren(ApiRequestsServerRouteChildren)

interface ApiSchoolSubmissionsServerRouteChildren {
  ApiSchoolSubmissionsIdApproveServerRoute: typeof ApiSchoolSubmissionsIdApproveServerRoute
  ApiSchoolSubmissionsIdRejectServerRoute: typeof ApiSchoolSubmissionsIdRejectServerRoute
}

const ApiSchoolSubmissionsServerRouteChildren: ApiSchoolSubmissionsServerRouteChildren =
  {
    ApiSchoolSubmissionsIdApproveServerRoute:
      ApiSchoolSubmissionsIdApproveServerRoute,
    ApiSchoolSubmissionsIdRejectServerRoute:
      ApiSchoolSubmissionsIdRejectServerRoute,
  }

const ApiSchoolSubmissionsServerRouteWithChildren =
  ApiSchoolSubmissionsServerRoute._addFileChildren(
    ApiSchoolSubmissionsServerRouteChildren,
  )

interface ApiSchoolsServerRouteChildren {
  ApiSchoolsIdServerRoute: typeof ApiSchoolsIdServerRoute
}

const ApiSchoolsServerRouteChildren: ApiSchoolsServerRouteChildren = {
  ApiSchoolsIdServerRoute: ApiSchoolsIdServerRoute,
}

const ApiSchoolsServerRouteWithChildren =
  ApiSchoolsServerRoute._addFileChildren(ApiSchoolsServerRouteChildren)

interface ApiEmailFragmentsServerRouteChildren {
  ApiEmailFragmentsDefaultServerRoute: typeof ApiEmailFragmentsDefaultServerRoute
}

const ApiEmailFragmentsServerRouteChildren: ApiEmailFragmentsServerRouteChildren =
  {
    ApiEmailFragmentsDefaultServerRoute: ApiEmailFragmentsDefaultServerRoute,
  }

const ApiEmailFragmentsServerRouteWithChildren =
  ApiEmailFragmentsServerRoute._addFileChildren(
    ApiEmailFragmentsServerRouteChildren,
  )

interface ApiEmailTemplatesServerRouteChildren {
  ApiEmailTemplatesPreviewServerRoute: typeof ApiEmailTemplatesPreviewServerRoute
  ApiEmailTemplatesSeedApprovalServerRoute: typeof ApiEmailTemplatesSeedApprovalServerRoute
  ApiEmailTemplatesSeedSchoolApprovalServerRoute: typeof ApiEmailTemplatesSeedSchoolApprovalServerRoute
  ApiEmailTemplatesSeedSchoolSetupServerRoute: typeof ApiEmailTemplatesSeedSchoolSetupServerRoute
}

const ApiEmailTemplatesServerRouteChildren: ApiEmailTemplatesServerRouteChildren =
  {
    ApiEmailTemplatesPreviewServerRoute: ApiEmailTemplatesPreviewServerRoute,
    ApiEmailTemplatesSeedApprovalServerRoute:
      ApiEmailTemplatesSeedApprovalServerRoute,
    ApiEmailTemplatesSeedSchoolApprovalServerRoute:
      ApiEmailTemplatesSeedSchoolApprovalServerRoute,
    ApiEmailTemplatesSeedSchoolSetupServerRoute:
      ApiEmailTemplatesSeedSchoolSetupServerRoute,
  }

const ApiEmailTemplatesServerRouteWithChildren =
  ApiEmailTemplatesServerRoute._addFileChildren(
    ApiEmailTemplatesServerRouteChildren,
  )

interface ApiTransactionsIdServerRouteChildren {
  ApiTransactionsIdMessagesServerRoute: typeof ApiTransactionsIdMessagesServerRoute
}

const ApiTransactionsIdServerRouteChildren: ApiTransactionsIdServerRouteChildren =
  {
    ApiTransactionsIdMessagesServerRoute: ApiTransactionsIdMessagesServerRoute,
  }

const ApiTransactionsIdServerRouteWithChildren =
  ApiTransactionsIdServerRoute._addFileChildren(
    ApiTransactionsIdServerRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthPendingRoute: AuthPendingRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  MarketplaceBrowseRoute: MarketplaceBrowseRoute,
  MarketplaceCreateRoute: MarketplaceCreateRoute,
  MarketplaceFavoritesRoute: MarketplaceFavoritesRoute,
  MarketplaceMessagesRoute: MarketplaceMessagesRoute,
  MarketplaceMyListingsRoute: MarketplaceMyListingsRoute,
  MarketplaceRequestsRoute: MarketplaceRequestsRouteWithChildren,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  MarketplaceListingsIdRoute: MarketplaceListingsIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSettingsServerRoute: ApiAuthSettingsServerRouteWithChildren,
  ApiAvatarServerRoute: ApiAvatarServerRoute,
  ApiChangePasswordServerRoute: ApiChangePasswordServerRoute,
  ApiConditionsServerRoute: ApiConditionsServerRoute,
  ApiCountiesServerRoute: ApiCountiesServerRoute,
  ApiCredentialsServerRoute: ApiCredentialsServerRoute,
  ApiFamilyMembersServerRoute: ApiFamilyMembersServerRouteWithChildren,
  ApiFavoritesServerRoute: ApiFavoritesServerRoute,
  ApiFilesServerRoute: ApiFilesServerRoute,
  ApiListingsServerRoute: ApiListingsServerRouteWithChildren,
  ApiLocalitiesServerRoute: ApiLocalitiesServerRouteWithChildren,
  ApiMeServerRoute: ApiMeServerRoute,
  ApiProductCategoriesServerRoute: ApiProductCategoriesServerRouteWithChildren,
  ApiReportsServerRoute: ApiReportsServerRoute,
  ApiRequestsServerRoute: ApiRequestsServerRouteWithChildren,
  ApiSchoolApprovalRequestsServerRoute: ApiSchoolApprovalRequestsServerRoute,
  ApiSchoolSetupRequestsServerRoute: ApiSchoolSetupRequestsServerRoute,
  ApiSchoolSubmissionsServerRoute: ApiSchoolSubmissionsServerRouteWithChildren,
  ApiSchoolsServerRoute: ApiSchoolsServerRouteWithChildren,
  ApiShopOptionsServerRoute: ApiShopOptionsServerRoute,
  ApiShopsServerRoute: ApiShopsServerRoute,
  ApiTestServerRoute: ApiTestServerRoute,
  ApiUploadServerRoute: ApiUploadServerRoute,
  ApiUserFilesServerRoute: ApiUserFilesServerRoute,
  ApiUserProfileServerRoute: ApiUserProfileServerRoute,
  ApiUsersApprovalServerRoute: ApiUsersApprovalServerRoute,
  ApiAdminAnalyticsServerRoute: ApiAdminAnalyticsServerRoute,
  ApiAdminDashboardStatsServerRoute: ApiAdminDashboardStatsServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiAuthAdminExistsServerRoute: ApiAuthAdminExistsServerRoute,
  ApiAuthPermissionsServerRoute: ApiAuthPermissionsServerRoute,
  ApiAuthRolesPublicServerRoute: ApiAuthRolesPublicServerRoute,
  ApiAuthSignupPostHookServerRoute: ApiAuthSignupPostHookServerRoute,
  ApiAuthUpgradeFirstAdminServerRoute: ApiAuthUpgradeFirstAdminServerRoute,
  ApiBrandingActiveServerRoute: ApiBrandingActiveServerRoute,
  ApiEmailFragmentsServerRoute: ApiEmailFragmentsServerRouteWithChildren,
  ApiEmailLogsServerRoute: ApiEmailLogsServerRoute,
  ApiEmailSettingsServerRoute: ApiEmailSettingsServerRoute,
  ApiEmailTemplatesServerRoute: ApiEmailTemplatesServerRouteWithChildren,
  ApiEmailTestServerRoute: ApiEmailTestServerRoute,
  ApiMarketplaceSearchServerRoute: ApiMarketplaceSearchServerRoute,
  ApiProfilesFamilyMembersServerRoute: ApiProfilesFamilyMembersServerRoute,
  ApiProfilesShopServerRoute: ApiProfilesShopServerRoute,
  ApiRolesRoleIdServerRoute: ApiRolesRoleIdServerRoute,
  ApiRolesSeedServerRoute: ApiRolesSeedServerRoute,
  ApiStorageSettingsServerRoute: ApiStorageSettingsServerRoute,
  ApiTransactionsIdServerRoute: ApiTransactionsIdServerRouteWithChildren,
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
  ApiUsersActionsServerRoute: ApiUsersActionsServerRoute,
  ApiBrandingIndexServerRoute: ApiBrandingIndexServerRoute,
  ApiEmailIndexServerRoute: ApiEmailIndexServerRoute,
  ApiProductTypesIndexServerRoute: ApiProductTypesIndexServerRoute,
  ApiRolesIndexServerRoute: ApiRolesIndexServerRoute,
  ApiTransactionsIndexServerRoute: ApiTransactionsIndexServerRoute,
  ApiUsersIndexServerRoute: ApiUsersIndexServerRoute,
  ApiProductTypesIdAttributesServerRoute:
    ApiProductTypesIdAttributesServerRoute,
  ApiProfilesFamilyMemberIdServerRoute: ApiProfilesFamilyMemberIdServerRoute,
  ApiSpipuniformLocalitiesSearchServerRoute:
    ApiSpipuniformLocalitiesSearchServerRoute,
  ApiSpipuniformCountiesIndexServerRoute:
    ApiSpipuniformCountiesIndexServerRoute,
  ApiSpipuniformLocalitiesIndexServerRoute:
    ApiSpipuniformLocalitiesIndexServerRoute,
  ApiSpipuniformSchoolStockIndexServerRoute:
    ApiSpipuniformSchoolStockIndexServerRoute,
  ApiSpipuniformSchoolsIndexServerRoute: ApiSpipuniformSchoolsIndexServerRoute,
  ApiSpipuniformShopsIndexServerRoute: ApiSpipuniformShopsIndexServerRoute,
  ApiSpipuniformAdminAttributeValuesValueIdServerRoute:
    ApiSpipuniformAdminAttributeValuesValueIdServerRoute,
  ApiSpipuniformAdminAttributesAttributeIdServerRoute:
    ApiSpipuniformAdminAttributesAttributeIdServerRoute,
  ApiSpipuniformAdminCategoriesCategoryIdServerRoute:
    ApiSpipuniformAdminCategoriesCategoryIdServerRoute,
  ApiSpipuniformAdminConditionsIdServerRoute:
    ApiSpipuniformAdminConditionsIdServerRoute,
  ApiSpipuniformAdminConditionsReorderServerRoute:
    ApiSpipuniformAdminConditionsReorderServerRoute,
  ApiSpipuniformAdminProductTypesTypeIdServerRoute:
    ApiSpipuniformAdminProductTypesTypeIdServerRoute,
  ApiSpipuniformAdminAttributeValuesIndexServerRoute:
    ApiSpipuniformAdminAttributeValuesIndexServerRoute,
  ApiSpipuniformAdminAttributesIndexServerRoute:
    ApiSpipuniformAdminAttributesIndexServerRoute,
  ApiSpipuniformAdminCategoriesIndexServerRoute:
    ApiSpipuniformAdminCategoriesIndexServerRoute,
  ApiSpipuniformAdminConditionsIndexServerRoute:
    ApiSpipuniformAdminConditionsIndexServerRoute,
  ApiSpipuniformAdminProductTypesIndexServerRoute:
    ApiSpipuniformAdminProductTypesIndexServerRoute,
  ApiSpipuniformAdminSchoolOwnersIndexServerRoute:
    ApiSpipuniformAdminSchoolOwnersIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
