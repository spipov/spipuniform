/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardStorageSettingsRouteImport } from './routes/dashboard/storage-settings'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardFileManagerRouteImport } from './routes/dashboard/file-manager'
import { Route as DashboardEmailRouteImport } from './routes/dashboard/email'
import { Route as DashboardBrandingRouteImport } from './routes/dashboard/branding'
import { Route as DashboardAccountRouteImport } from './routes/dashboard/account'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthPendingRouteImport } from './routes/auth/pending'
import { Route as DashboardUserManagementIndexRouteImport } from './routes/dashboard/user-management/index'
import { Route as DashboardSpipuniformIndexRouteImport } from './routes/dashboard/spipuniform/index'
import { Route as DashboardProfileIndexRouteImport } from './routes/dashboard/profile/index'
import { Route as DashboardUserManagementUsersRouteImport } from './routes/dashboard/user-management/users'
import { Route as DashboardUserManagementRolesRouteImport } from './routes/dashboard/user-management/roles'
import { Route as DashboardUserManagementPermissionsRouteImport } from './routes/dashboard/user-management/permissions'
import { Route as DashboardUserManagementConsolidatedRouteImport } from './routes/dashboard/user-management/consolidated'
import { Route as DashboardSpipuniformDataVerificationRouteImport } from './routes/dashboard/spipuniform/data-verification'
import { Route as DashboardProfileShopRouteImport } from './routes/dashboard/profile/shop'
import { Route as DashboardProfileFamilyRouteImport } from './routes/dashboard/profile/family'
import { Route as DashboardSpipuniformProductsTypesRouteImport } from './routes/dashboard/spipuniform/products/types'
import { Route as DashboardSpipuniformProductsConditionsRouteImport } from './routes/dashboard/spipuniform/products/conditions'
import { Route as DashboardSpipuniformProductsCategoriesRouteImport } from './routes/dashboard/spipuniform/products/categories'
import { Route as DashboardSpipuniformProductsAttributesRouteImport } from './routes/dashboard/spipuniform/products/attributes'
import { ServerRoute as ApiUsersApprovalServerRouteImport } from './routes/api/users-approval'
import { ServerRoute as ApiUserProfileServerRouteImport } from './routes/api/user-profile'
import { ServerRoute as ApiUserFilesServerRouteImport } from './routes/api/user-files'
import { ServerRoute as ApiTestServerRouteImport } from './routes/api/test'
import { ServerRoute as ApiMeServerRouteImport } from './routes/api/me'
import { ServerRoute as ApiFilesServerRouteImport } from './routes/api/files'
import { ServerRoute as ApiCredentialsServerRouteImport } from './routes/api/credentials'
import { ServerRoute as ApiChangePasswordServerRouteImport } from './routes/api/change-password'
import { ServerRoute as ApiAvatarServerRouteImport } from './routes/api/avatar'
import { ServerRoute as ApiAuthSettingsServerRouteImport } from './routes/api/auth-settings'
import { ServerRoute as ApiUsersIndexServerRouteImport } from './routes/api/users/index'
import { ServerRoute as ApiRolesIndexServerRouteImport } from './routes/api/roles/index'
import { ServerRoute as ApiProfilesIndexServerRouteImport } from './routes/api/profiles/index'
import { ServerRoute as ApiEmailIndexServerRouteImport } from './routes/api/email/index'
import { ServerRoute as ApiBrandingIndexServerRouteImport } from './routes/api/branding/index'
import { ServerRoute as ApiUsersActionsServerRouteImport } from './routes/api/users/actions'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users/$userId'
import { ServerRoute as ApiStorageSettingsServerRouteImport } from './routes/api/storage/settings'
import { ServerRoute as ApiRolesRoleIdServerRouteImport } from './routes/api/roles/$roleId'
import { ServerRoute as ApiProfilesShopServerRouteImport } from './routes/api.profiles.shop'
import { ServerRoute as ApiProfilesFamilyMembersServerRouteImport } from './routes/api.profiles.familyMembers'
import { ServerRoute as ApiLocalitiesSplatServerRouteImport } from './routes/api/localities/$'
import { ServerRoute as ApiEmailTestServerRouteImport } from './routes/api/email/test'
import { ServerRoute as ApiEmailTemplatesServerRouteImport } from './routes/api/email/templates'
import { ServerRoute as ApiEmailSettingsServerRouteImport } from './routes/api/email/settings'
import { ServerRoute as ApiEmailLogsServerRouteImport } from './routes/api/email/logs'
import { ServerRoute as ApiEmailFragmentsServerRouteImport } from './routes/api/email/fragments'
import { ServerRoute as ApiBrandingActiveServerRouteImport } from './routes/api/branding/active'
import { ServerRoute as ApiAuthSignupPostHookServerRouteImport } from './routes/api/auth/signup-post-hook'
import { ServerRoute as ApiAuthPermissionsServerRouteImport } from './routes/api/auth/permissions'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'
import { ServerRoute as ApiAuthSettingsFlagServerRouteImport } from './routes/api/auth-settings.flag'
import { ServerRoute as ApiAdminDashboardStatsServerRouteImport } from './routes/api/admin/dashboard-stats'
import { ServerRoute as ApiAdminAnalyticsServerRouteImport } from './routes/api/admin/analytics'
import { ServerRoute as ApiSpipuniformSchoolsIndexServerRouteImport } from './routes/api/spipuniform/schools/index'
import { ServerRoute as ApiSpipuniformCountiesIndexServerRouteImport } from './routes/api/spipuniform/counties/index'
import { ServerRoute as ApiProfilesFamilyMembersIndexServerRouteImport } from './routes/api/profiles/family-members/index'
import { ServerRoute as ApiSpipuniformLocalitiesSearchServerRouteImport } from './routes/api/spipuniform/localities/search'
import { ServerRoute as ApiProfilesFamilyMemberIdServerRouteImport } from './routes/api.profiles.familyMember.$id'
import { ServerRoute as ApiLocalitiesFetchSplatServerRouteImport } from './routes/api/localities/fetch/$'
import { ServerRoute as ApiEmailTemplatesSeedApprovalServerRouteImport } from './routes/api/email/templates.seed-approval'
import { ServerRoute as ApiEmailTemplatesPreviewServerRouteImport } from './routes/api/email/templates.preview'
import { ServerRoute as ApiEmailFragmentsDefaultServerRouteImport } from './routes/api/email/fragments.default'
import { ServerRoute as ApiSpipuniformAdminProductTypesIndexServerRouteImport } from './routes/api/spipuniform/admin/product-types/index'
import { ServerRoute as ApiSpipuniformAdminCategoriesIndexServerRouteImport } from './routes/api/spipuniform/admin/categories/index'
import { ServerRoute as ApiSpipuniformAdminAttributesIndexServerRouteImport } from './routes/api/spipuniform/admin/attributes/index'
import { ServerRoute as ApiSpipuniformAdminAttributeValuesIndexServerRouteImport } from './routes/api/spipuniform/admin/attribute-values/index'
import { ServerRoute as ApiSpipuniformAdminProductTypesTypeIdServerRouteImport } from './routes/api/spipuniform/admin/product-types/[typeId]'
import { ServerRoute as ApiSpipuniformAdminCategoriesCategoryIdServerRouteImport } from './routes/api/spipuniform/admin/categories/[categoryId]'
import { ServerRoute as ApiSpipuniformAdminAttributesAttributeIdServerRouteImport } from './routes/api/spipuniform/admin/attributes/[attributeId]'
import { ServerRoute as ApiSpipuniformAdminAttributeValuesValueIdServerRouteImport } from './routes/api/spipuniform/admin/attribute-values/[valueId]'

const rootServerRouteImport = createServerRootRoute()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardStorageSettingsRoute =
  DashboardStorageSettingsRouteImport.update({
    id: '/storage-settings',
    path: '/storage-settings',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardFileManagerRoute = DashboardFileManagerRouteImport.update({
  id: '/file-manager',
  path: '/file-manager',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardEmailRoute = DashboardEmailRouteImport.update({
  id: '/email',
  path: '/email',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBrandingRoute = DashboardBrandingRouteImport.update({
  id: '/branding',
  path: '/branding',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAccountRoute = DashboardAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPendingRoute = AuthPendingRouteImport.update({
  id: '/auth/pending',
  path: '/auth/pending',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserManagementIndexRoute =
  DashboardUserManagementIndexRouteImport.update({
    id: '/user-management/',
    path: '/user-management/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformIndexRoute =
  DashboardSpipuniformIndexRouteImport.update({
    id: '/spipuniform/',
    path: '/spipuniform/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProfileIndexRoute = DashboardProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserManagementUsersRoute =
  DashboardUserManagementUsersRouteImport.update({
    id: '/user-management/users',
    path: '/user-management/users',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementRolesRoute =
  DashboardUserManagementRolesRouteImport.update({
    id: '/user-management/roles',
    path: '/user-management/roles',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementPermissionsRoute =
  DashboardUserManagementPermissionsRouteImport.update({
    id: '/user-management/permissions',
    path: '/user-management/permissions',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserManagementConsolidatedRoute =
  DashboardUserManagementConsolidatedRouteImport.update({
    id: '/user-management/consolidated',
    path: '/user-management/consolidated',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformDataVerificationRoute =
  DashboardSpipuniformDataVerificationRouteImport.update({
    id: '/spipuniform/data-verification',
    path: '/spipuniform/data-verification',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProfileShopRoute = DashboardProfileShopRouteImport.update({
  id: '/profile/shop',
  path: '/profile/shop',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProfileFamilyRoute = DashboardProfileFamilyRouteImport.update({
  id: '/profile/family',
  path: '/profile/family',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSpipuniformProductsTypesRoute =
  DashboardSpipuniformProductsTypesRouteImport.update({
    id: '/spipuniform/products/types',
    path: '/spipuniform/products/types',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformProductsConditionsRoute =
  DashboardSpipuniformProductsConditionsRouteImport.update({
    id: '/spipuniform/products/conditions',
    path: '/spipuniform/products/conditions',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformProductsCategoriesRoute =
  DashboardSpipuniformProductsCategoriesRouteImport.update({
    id: '/spipuniform/products/categories',
    path: '/spipuniform/products/categories',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSpipuniformProductsAttributesRoute =
  DashboardSpipuniformProductsAttributesRouteImport.update({
    id: '/spipuniform/products/attributes',
    path: '/spipuniform/products/attributes',
    getParentRoute: () => DashboardRoute,
  } as any)
const ApiUsersApprovalServerRoute = ApiUsersApprovalServerRouteImport.update({
  id: '/api/users-approval',
  path: '/api/users-approval',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUserProfileServerRoute = ApiUserProfileServerRouteImport.update({
  id: '/api/user-profile',
  path: '/api/user-profile',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUserFilesServerRoute = ApiUserFilesServerRouteImport.update({
  id: '/api/user-files',
  path: '/api/user-files',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTestServerRoute = ApiTestServerRouteImport.update({
  id: '/api/test',
  path: '/api/test',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMeServerRoute = ApiMeServerRouteImport.update({
  id: '/api/me',
  path: '/api/me',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiFilesServerRoute = ApiFilesServerRouteImport.update({
  id: '/api/files',
  path: '/api/files',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiCredentialsServerRoute = ApiCredentialsServerRouteImport.update({
  id: '/api/credentials',
  path: '/api/credentials',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChangePasswordServerRoute = ApiChangePasswordServerRouteImport.update({
  id: '/api/change-password',
  path: '/api/change-password',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarServerRoute = ApiAvatarServerRouteImport.update({
  id: '/api/avatar',
  path: '/api/avatar',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSettingsServerRoute = ApiAuthSettingsServerRouteImport.update({
  id: '/api/auth-settings',
  path: '/api/auth-settings',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersIndexServerRoute = ApiUsersIndexServerRouteImport.update({
  id: '/api/users/',
  path: '/api/users/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRolesIndexServerRoute = ApiRolesIndexServerRouteImport.update({
  id: '/api/roles/',
  path: '/api/roles/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProfilesIndexServerRoute = ApiProfilesIndexServerRouteImport.update({
  id: '/api/profiles/',
  path: '/api/profiles/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailIndexServerRoute = ApiEmailIndexServerRouteImport.update({
  id: '/api/email/',
  path: '/api/email/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiBrandingIndexServerRoute = ApiBrandingIndexServerRouteImport.update({
  id: '/api/branding/',
  path: '/api/branding/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersActionsServerRoute = ApiUsersActionsServerRouteImport.update({
  id: '/api/users/actions',
  path: '/api/users/actions',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/api/users/$userId',
  path: '/api/users/$userId',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiStorageSettingsServerRoute =
  ApiStorageSettingsServerRouteImport.update({
    id: '/api/storage/settings',
    path: '/api/storage/settings',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiRolesRoleIdServerRoute = ApiRolesRoleIdServerRouteImport.update({
  id: '/api/roles/$roleId',
  path: '/api/roles/$roleId',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProfilesShopServerRoute = ApiProfilesShopServerRouteImport.update({
  id: '/api/profiles/shop',
  path: '/api/profiles/shop',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiProfilesFamilyMembersServerRoute =
  ApiProfilesFamilyMembersServerRouteImport.update({
    id: '/api/profiles/familyMembers',
    path: '/api/profiles/familyMembers',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiLocalitiesSplatServerRoute =
  ApiLocalitiesSplatServerRouteImport.update({
    id: '/api/localities/$',
    path: '/api/localities/$',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiEmailTestServerRoute = ApiEmailTestServerRouteImport.update({
  id: '/api/email/test',
  path: '/api/email/test',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailTemplatesServerRoute = ApiEmailTemplatesServerRouteImport.update({
  id: '/api/email/templates',
  path: '/api/email/templates',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailSettingsServerRoute = ApiEmailSettingsServerRouteImport.update({
  id: '/api/email/settings',
  path: '/api/email/settings',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailLogsServerRoute = ApiEmailLogsServerRouteImport.update({
  id: '/api/email/logs',
  path: '/api/email/logs',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmailFragmentsServerRoute = ApiEmailFragmentsServerRouteImport.update({
  id: '/api/email/fragments',
  path: '/api/email/fragments',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiBrandingActiveServerRoute = ApiBrandingActiveServerRouteImport.update({
  id: '/api/branding/active',
  path: '/api/branding/active',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignupPostHookServerRoute =
  ApiAuthSignupPostHookServerRouteImport.update({
    id: '/api/auth/signup-post-hook',
    path: '/api/auth/signup-post-hook',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthPermissionsServerRoute =
  ApiAuthPermissionsServerRouteImport.update({
    id: '/api/auth/permissions',
    path: '/api/auth/permissions',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSettingsFlagServerRoute =
  ApiAuthSettingsFlagServerRouteImport.update({
    id: '/flag',
    path: '/flag',
    getParentRoute: () => ApiAuthSettingsServerRoute,
  } as any)
const ApiAdminDashboardStatsServerRoute =
  ApiAdminDashboardStatsServerRouteImport.update({
    id: '/api/admin/dashboard-stats',
    path: '/api/admin/dashboard-stats',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAdminAnalyticsServerRoute = ApiAdminAnalyticsServerRouteImport.update({
  id: '/api/admin/analytics',
  path: '/api/admin/analytics',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSpipuniformSchoolsIndexServerRoute =
  ApiSpipuniformSchoolsIndexServerRouteImport.update({
    id: '/api/spipuniform/schools/',
    path: '/api/spipuniform/schools/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformCountiesIndexServerRoute =
  ApiSpipuniformCountiesIndexServerRouteImport.update({
    id: '/api/spipuniform/counties/',
    path: '/api/spipuniform/counties/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiProfilesFamilyMembersIndexServerRoute =
  ApiProfilesFamilyMembersIndexServerRouteImport.update({
    id: '/api/profiles/family-members/',
    path: '/api/profiles/family-members/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformLocalitiesSearchServerRoute =
  ApiSpipuniformLocalitiesSearchServerRouteImport.update({
    id: '/api/spipuniform/localities/search',
    path: '/api/spipuniform/localities/search',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiProfilesFamilyMemberIdServerRoute =
  ApiProfilesFamilyMemberIdServerRouteImport.update({
    id: '/api/profiles/familyMember/$id',
    path: '/api/profiles/familyMember/$id',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiLocalitiesFetchSplatServerRoute =
  ApiLocalitiesFetchSplatServerRouteImport.update({
    id: '/api/localities/fetch/$',
    path: '/api/localities/fetch/$',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiEmailTemplatesSeedApprovalServerRoute =
  ApiEmailTemplatesSeedApprovalServerRouteImport.update({
    id: '/seed-approval',
    path: '/seed-approval',
    getParentRoute: () => ApiEmailTemplatesServerRoute,
  } as any)
const ApiEmailTemplatesPreviewServerRoute =
  ApiEmailTemplatesPreviewServerRouteImport.update({
    id: '/preview',
    path: '/preview',
    getParentRoute: () => ApiEmailTemplatesServerRoute,
  } as any)
const ApiEmailFragmentsDefaultServerRoute =
  ApiEmailFragmentsDefaultServerRouteImport.update({
    id: '/default',
    path: '/default',
    getParentRoute: () => ApiEmailFragmentsServerRoute,
  } as any)
const ApiSpipuniformAdminProductTypesIndexServerRoute =
  ApiSpipuniformAdminProductTypesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/product-types/',
    path: '/api/spipuniform/admin/product-types/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminCategoriesIndexServerRoute =
  ApiSpipuniformAdminCategoriesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/categories/',
    path: '/api/spipuniform/admin/categories/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributesIndexServerRoute =
  ApiSpipuniformAdminAttributesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/attributes/',
    path: '/api/spipuniform/admin/attributes/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributeValuesIndexServerRoute =
  ApiSpipuniformAdminAttributeValuesIndexServerRouteImport.update({
    id: '/api/spipuniform/admin/attribute-values/',
    path: '/api/spipuniform/admin/attribute-values/',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminProductTypesTypeIdServerRoute =
  ApiSpipuniformAdminProductTypesTypeIdServerRouteImport.update({
    id: '/api/spipuniform/admin/product-types/typeId',
    path: '/api/spipuniform/admin/product-types/typeId',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminCategoriesCategoryIdServerRoute =
  ApiSpipuniformAdminCategoriesCategoryIdServerRouteImport.update({
    id: '/api/spipuniform/admin/categories/categoryId',
    path: '/api/spipuniform/admin/categories/categoryId',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributesAttributeIdServerRoute =
  ApiSpipuniformAdminAttributesAttributeIdServerRouteImport.update({
    id: '/api/spipuniform/admin/attributes/attributeId',
    path: '/api/spipuniform/admin/attributes/attributeId',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiSpipuniformAdminAttributeValuesValueIdServerRoute =
  ApiSpipuniformAdminAttributeValuesValueIdServerRouteImport.update({
    id: '/api/spipuniform/admin/attribute-values/valueId',
    path: '/api/spipuniform/admin/attribute-values/valueId',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/pending': typeof AuthPendingRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/branding': typeof DashboardBrandingRoute
  '/dashboard/email': typeof DashboardEmailRoute
  '/dashboard/file-manager': typeof DashboardFileManagerRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/storage-settings': typeof DashboardStorageSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/profile/family': typeof DashboardProfileFamilyRoute
  '/dashboard/profile/shop': typeof DashboardProfileShopRoute
  '/dashboard/spipuniform/data-verification': typeof DashboardSpipuniformDataVerificationRoute
  '/dashboard/user-management/consolidated': typeof DashboardUserManagementConsolidatedRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/spipuniform': typeof DashboardSpipuniformIndexRoute
  '/dashboard/user-management': typeof DashboardUserManagementIndexRoute
  '/dashboard/spipuniform/products/attributes': typeof DashboardSpipuniformProductsAttributesRoute
  '/dashboard/spipuniform/products/categories': typeof DashboardSpipuniformProductsCategoriesRoute
  '/dashboard/spipuniform/products/conditions': typeof DashboardSpipuniformProductsConditionsRoute
  '/dashboard/spipuniform/products/types': typeof DashboardSpipuniformProductsTypesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/auth/pending': typeof AuthPendingRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/branding': typeof DashboardBrandingRoute
  '/dashboard/email': typeof DashboardEmailRoute
  '/dashboard/file-manager': typeof DashboardFileManagerRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/storage-settings': typeof DashboardStorageSettingsRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/profile/family': typeof DashboardProfileFamilyRoute
  '/dashboard/profile/shop': typeof DashboardProfileShopRoute
  '/dashboard/spipuniform/data-verification': typeof DashboardSpipuniformDataVerificationRoute
  '/dashboard/user-management/consolidated': typeof DashboardUserManagementConsolidatedRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/spipuniform': typeof DashboardSpipuniformIndexRoute
  '/dashboard/user-management': typeof DashboardUserManagementIndexRoute
  '/dashboard/spipuniform/products/attributes': typeof DashboardSpipuniformProductsAttributesRoute
  '/dashboard/spipuniform/products/categories': typeof DashboardSpipuniformProductsCategoriesRoute
  '/dashboard/spipuniform/products/conditions': typeof DashboardSpipuniformProductsConditionsRoute
  '/dashboard/spipuniform/products/types': typeof DashboardSpipuniformProductsTypesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/pending': typeof AuthPendingRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/branding': typeof DashboardBrandingRoute
  '/dashboard/email': typeof DashboardEmailRoute
  '/dashboard/file-manager': typeof DashboardFileManagerRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/storage-settings': typeof DashboardStorageSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/profile/family': typeof DashboardProfileFamilyRoute
  '/dashboard/profile/shop': typeof DashboardProfileShopRoute
  '/dashboard/spipuniform/data-verification': typeof DashboardSpipuniformDataVerificationRoute
  '/dashboard/user-management/consolidated': typeof DashboardUserManagementConsolidatedRoute
  '/dashboard/user-management/permissions': typeof DashboardUserManagementPermissionsRoute
  '/dashboard/user-management/roles': typeof DashboardUserManagementRolesRoute
  '/dashboard/user-management/users': typeof DashboardUserManagementUsersRoute
  '/dashboard/profile/': typeof DashboardProfileIndexRoute
  '/dashboard/spipuniform/': typeof DashboardSpipuniformIndexRoute
  '/dashboard/user-management/': typeof DashboardUserManagementIndexRoute
  '/dashboard/spipuniform/products/attributes': typeof DashboardSpipuniformProductsAttributesRoute
  '/dashboard/spipuniform/products/categories': typeof DashboardSpipuniformProductsCategoriesRoute
  '/dashboard/spipuniform/products/conditions': typeof DashboardSpipuniformProductsConditionsRoute
  '/dashboard/spipuniform/products/types': typeof DashboardSpipuniformProductsTypesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/auth/pending'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/account'
    | '/dashboard/branding'
    | '/dashboard/email'
    | '/dashboard/file-manager'
    | '/dashboard/settings'
    | '/dashboard/storage-settings'
    | '/dashboard/'
    | '/dashboard/profile/family'
    | '/dashboard/profile/shop'
    | '/dashboard/spipuniform/data-verification'
    | '/dashboard/user-management/consolidated'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/dashboard/profile'
    | '/dashboard/spipuniform'
    | '/dashboard/user-management'
    | '/dashboard/spipuniform/products/attributes'
    | '/dashboard/spipuniform/products/categories'
    | '/dashboard/spipuniform/products/conditions'
    | '/dashboard/spipuniform/products/types'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth/pending'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/account'
    | '/dashboard/branding'
    | '/dashboard/email'
    | '/dashboard/file-manager'
    | '/dashboard/settings'
    | '/dashboard/storage-settings'
    | '/dashboard'
    | '/dashboard/profile/family'
    | '/dashboard/profile/shop'
    | '/dashboard/spipuniform/data-verification'
    | '/dashboard/user-management/consolidated'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/dashboard/profile'
    | '/dashboard/spipuniform'
    | '/dashboard/user-management'
    | '/dashboard/spipuniform/products/attributes'
    | '/dashboard/spipuniform/products/categories'
    | '/dashboard/spipuniform/products/conditions'
    | '/dashboard/spipuniform/products/types'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/auth/pending'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/dashboard/account'
    | '/dashboard/branding'
    | '/dashboard/email'
    | '/dashboard/file-manager'
    | '/dashboard/settings'
    | '/dashboard/storage-settings'
    | '/dashboard/'
    | '/dashboard/profile/family'
    | '/dashboard/profile/shop'
    | '/dashboard/spipuniform/data-verification'
    | '/dashboard/user-management/consolidated'
    | '/dashboard/user-management/permissions'
    | '/dashboard/user-management/roles'
    | '/dashboard/user-management/users'
    | '/dashboard/profile/'
    | '/dashboard/spipuniform/'
    | '/dashboard/user-management/'
    | '/dashboard/spipuniform/products/attributes'
    | '/dashboard/spipuniform/products/categories'
    | '/dashboard/spipuniform/products/conditions'
    | '/dashboard/spipuniform/products/types'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthPendingRoute: typeof AuthPendingRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth-settings': typeof ApiAuthSettingsServerRouteWithChildren
  '/api/avatar': typeof ApiAvatarServerRoute
  '/api/change-password': typeof ApiChangePasswordServerRoute
  '/api/credentials': typeof ApiCredentialsServerRoute
  '/api/files': typeof ApiFilesServerRoute
  '/api/me': typeof ApiMeServerRoute
  '/api/test': typeof ApiTestServerRoute
  '/api/user-files': typeof ApiUserFilesServerRoute
  '/api/user-profile': typeof ApiUserProfileServerRoute
  '/api/users-approval': typeof ApiUsersApprovalServerRoute
  '/api/admin/analytics': typeof ApiAdminAnalyticsServerRoute
  '/api/admin/dashboard-stats': typeof ApiAdminDashboardStatsServerRoute
  '/api/auth-settings/flag': typeof ApiAuthSettingsFlagServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/permissions': typeof ApiAuthPermissionsServerRoute
  '/api/auth/signup-post-hook': typeof ApiAuthSignupPostHookServerRoute
  '/api/branding/active': typeof ApiBrandingActiveServerRoute
  '/api/email/fragments': typeof ApiEmailFragmentsServerRouteWithChildren
  '/api/email/logs': typeof ApiEmailLogsServerRoute
  '/api/email/settings': typeof ApiEmailSettingsServerRoute
  '/api/email/templates': typeof ApiEmailTemplatesServerRouteWithChildren
  '/api/email/test': typeof ApiEmailTestServerRoute
  '/api/localities/$': typeof ApiLocalitiesSplatServerRoute
  '/api/profiles/familyMembers': typeof ApiProfilesFamilyMembersServerRoute
  '/api/profiles/shop': typeof ApiProfilesShopServerRoute
  '/api/roles/$roleId': typeof ApiRolesRoleIdServerRoute
  '/api/storage/settings': typeof ApiStorageSettingsServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
  '/api/users/actions': typeof ApiUsersActionsServerRoute
  '/api/branding': typeof ApiBrandingIndexServerRoute
  '/api/email': typeof ApiEmailIndexServerRoute
  '/api/profiles': typeof ApiProfilesIndexServerRoute
  '/api/roles': typeof ApiRolesIndexServerRoute
  '/api/users': typeof ApiUsersIndexServerRoute
  '/api/email/fragments/default': typeof ApiEmailFragmentsDefaultServerRoute
  '/api/email/templates/preview': typeof ApiEmailTemplatesPreviewServerRoute
  '/api/email/templates/seed-approval': typeof ApiEmailTemplatesSeedApprovalServerRoute
  '/api/localities/fetch/$': typeof ApiLocalitiesFetchSplatServerRoute
  '/api/profiles/familyMember/$id': typeof ApiProfilesFamilyMemberIdServerRoute
  '/api/spipuniform/localities/search': typeof ApiSpipuniformLocalitiesSearchServerRoute
  '/api/profiles/family-members': typeof ApiProfilesFamilyMembersIndexServerRoute
  '/api/spipuniform/counties': typeof ApiSpipuniformCountiesIndexServerRoute
  '/api/spipuniform/schools': typeof ApiSpipuniformSchoolsIndexServerRoute
  '/api/spipuniform/admin/attribute-values/valueId': typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  '/api/spipuniform/admin/attributes/attributeId': typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  '/api/spipuniform/admin/categories/categoryId': typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  '/api/spipuniform/admin/product-types/typeId': typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  '/api/spipuniform/admin/attribute-values': typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  '/api/spipuniform/admin/attributes': typeof ApiSpipuniformAdminAttributesIndexServerRoute
  '/api/spipuniform/admin/categories': typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  '/api/spipuniform/admin/product-types': typeof ApiSpipuniformAdminProductTypesIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth-settings': typeof ApiAuthSettingsServerRouteWithChildren
  '/api/avatar': typeof ApiAvatarServerRoute
  '/api/change-password': typeof ApiChangePasswordServerRoute
  '/api/credentials': typeof ApiCredentialsServerRoute
  '/api/files': typeof ApiFilesServerRoute
  '/api/me': typeof ApiMeServerRoute
  '/api/test': typeof ApiTestServerRoute
  '/api/user-files': typeof ApiUserFilesServerRoute
  '/api/user-profile': typeof ApiUserProfileServerRoute
  '/api/users-approval': typeof ApiUsersApprovalServerRoute
  '/api/admin/analytics': typeof ApiAdminAnalyticsServerRoute
  '/api/admin/dashboard-stats': typeof ApiAdminDashboardStatsServerRoute
  '/api/auth-settings/flag': typeof ApiAuthSettingsFlagServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/permissions': typeof ApiAuthPermissionsServerRoute
  '/api/auth/signup-post-hook': typeof ApiAuthSignupPostHookServerRoute
  '/api/branding/active': typeof ApiBrandingActiveServerRoute
  '/api/email/fragments': typeof ApiEmailFragmentsServerRouteWithChildren
  '/api/email/logs': typeof ApiEmailLogsServerRoute
  '/api/email/settings': typeof ApiEmailSettingsServerRoute
  '/api/email/templates': typeof ApiEmailTemplatesServerRouteWithChildren
  '/api/email/test': typeof ApiEmailTestServerRoute
  '/api/localities/$': typeof ApiLocalitiesSplatServerRoute
  '/api/profiles/familyMembers': typeof ApiProfilesFamilyMembersServerRoute
  '/api/profiles/shop': typeof ApiProfilesShopServerRoute
  '/api/roles/$roleId': typeof ApiRolesRoleIdServerRoute
  '/api/storage/settings': typeof ApiStorageSettingsServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
  '/api/users/actions': typeof ApiUsersActionsServerRoute
  '/api/branding': typeof ApiBrandingIndexServerRoute
  '/api/email': typeof ApiEmailIndexServerRoute
  '/api/profiles': typeof ApiProfilesIndexServerRoute
  '/api/roles': typeof ApiRolesIndexServerRoute
  '/api/users': typeof ApiUsersIndexServerRoute
  '/api/email/fragments/default': typeof ApiEmailFragmentsDefaultServerRoute
  '/api/email/templates/preview': typeof ApiEmailTemplatesPreviewServerRoute
  '/api/email/templates/seed-approval': typeof ApiEmailTemplatesSeedApprovalServerRoute
  '/api/localities/fetch/$': typeof ApiLocalitiesFetchSplatServerRoute
  '/api/profiles/familyMember/$id': typeof ApiProfilesFamilyMemberIdServerRoute
  '/api/spipuniform/localities/search': typeof ApiSpipuniformLocalitiesSearchServerRoute
  '/api/profiles/family-members': typeof ApiProfilesFamilyMembersIndexServerRoute
  '/api/spipuniform/counties': typeof ApiSpipuniformCountiesIndexServerRoute
  '/api/spipuniform/schools': typeof ApiSpipuniformSchoolsIndexServerRoute
  '/api/spipuniform/admin/attribute-values/valueId': typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  '/api/spipuniform/admin/attributes/attributeId': typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  '/api/spipuniform/admin/categories/categoryId': typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  '/api/spipuniform/admin/product-types/typeId': typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  '/api/spipuniform/admin/attribute-values': typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  '/api/spipuniform/admin/attributes': typeof ApiSpipuniformAdminAttributesIndexServerRoute
  '/api/spipuniform/admin/categories': typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  '/api/spipuniform/admin/product-types': typeof ApiSpipuniformAdminProductTypesIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth-settings': typeof ApiAuthSettingsServerRouteWithChildren
  '/api/avatar': typeof ApiAvatarServerRoute
  '/api/change-password': typeof ApiChangePasswordServerRoute
  '/api/credentials': typeof ApiCredentialsServerRoute
  '/api/files': typeof ApiFilesServerRoute
  '/api/me': typeof ApiMeServerRoute
  '/api/test': typeof ApiTestServerRoute
  '/api/user-files': typeof ApiUserFilesServerRoute
  '/api/user-profile': typeof ApiUserProfileServerRoute
  '/api/users-approval': typeof ApiUsersApprovalServerRoute
  '/api/admin/analytics': typeof ApiAdminAnalyticsServerRoute
  '/api/admin/dashboard-stats': typeof ApiAdminDashboardStatsServerRoute
  '/api/auth-settings/flag': typeof ApiAuthSettingsFlagServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/auth/permissions': typeof ApiAuthPermissionsServerRoute
  '/api/auth/signup-post-hook': typeof ApiAuthSignupPostHookServerRoute
  '/api/branding/active': typeof ApiBrandingActiveServerRoute
  '/api/email/fragments': typeof ApiEmailFragmentsServerRouteWithChildren
  '/api/email/logs': typeof ApiEmailLogsServerRoute
  '/api/email/settings': typeof ApiEmailSettingsServerRoute
  '/api/email/templates': typeof ApiEmailTemplatesServerRouteWithChildren
  '/api/email/test': typeof ApiEmailTestServerRoute
  '/api/localities/$': typeof ApiLocalitiesSplatServerRoute
  '/api/profiles/familyMembers': typeof ApiProfilesFamilyMembersServerRoute
  '/api/profiles/shop': typeof ApiProfilesShopServerRoute
  '/api/roles/$roleId': typeof ApiRolesRoleIdServerRoute
  '/api/storage/settings': typeof ApiStorageSettingsServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
  '/api/users/actions': typeof ApiUsersActionsServerRoute
  '/api/branding/': typeof ApiBrandingIndexServerRoute
  '/api/email/': typeof ApiEmailIndexServerRoute
  '/api/profiles/': typeof ApiProfilesIndexServerRoute
  '/api/roles/': typeof ApiRolesIndexServerRoute
  '/api/users/': typeof ApiUsersIndexServerRoute
  '/api/email/fragments/default': typeof ApiEmailFragmentsDefaultServerRoute
  '/api/email/templates/preview': typeof ApiEmailTemplatesPreviewServerRoute
  '/api/email/templates/seed-approval': typeof ApiEmailTemplatesSeedApprovalServerRoute
  '/api/localities/fetch/$': typeof ApiLocalitiesFetchSplatServerRoute
  '/api/profiles/familyMember/$id': typeof ApiProfilesFamilyMemberIdServerRoute
  '/api/spipuniform/localities/search': typeof ApiSpipuniformLocalitiesSearchServerRoute
  '/api/profiles/family-members/': typeof ApiProfilesFamilyMembersIndexServerRoute
  '/api/spipuniform/counties/': typeof ApiSpipuniformCountiesIndexServerRoute
  '/api/spipuniform/schools/': typeof ApiSpipuniformSchoolsIndexServerRoute
  '/api/spipuniform/admin/attribute-values/valueId': typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  '/api/spipuniform/admin/attributes/attributeId': typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  '/api/spipuniform/admin/categories/categoryId': typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  '/api/spipuniform/admin/product-types/typeId': typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  '/api/spipuniform/admin/attribute-values/': typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  '/api/spipuniform/admin/attributes/': typeof ApiSpipuniformAdminAttributesIndexServerRoute
  '/api/spipuniform/admin/categories/': typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  '/api/spipuniform/admin/product-types/': typeof ApiSpipuniformAdminProductTypesIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/auth-settings'
    | '/api/avatar'
    | '/api/change-password'
    | '/api/credentials'
    | '/api/files'
    | '/api/me'
    | '/api/test'
    | '/api/user-files'
    | '/api/user-profile'
    | '/api/users-approval'
    | '/api/admin/analytics'
    | '/api/admin/dashboard-stats'
    | '/api/auth-settings/flag'
    | '/api/auth/$'
    | '/api/auth/permissions'
    | '/api/auth/signup-post-hook'
    | '/api/branding/active'
    | '/api/email/fragments'
    | '/api/email/logs'
    | '/api/email/settings'
    | '/api/email/templates'
    | '/api/email/test'
    | '/api/localities/$'
    | '/api/profiles/familyMembers'
    | '/api/profiles/shop'
    | '/api/roles/$roleId'
    | '/api/storage/settings'
    | '/api/users/$userId'
    | '/api/users/actions'
    | '/api/branding'
    | '/api/email'
    | '/api/profiles'
    | '/api/roles'
    | '/api/users'
    | '/api/email/fragments/default'
    | '/api/email/templates/preview'
    | '/api/email/templates/seed-approval'
    | '/api/localities/fetch/$'
    | '/api/profiles/familyMember/$id'
    | '/api/spipuniform/localities/search'
    | '/api/profiles/family-members'
    | '/api/spipuniform/counties'
    | '/api/spipuniform/schools'
    | '/api/spipuniform/admin/attribute-values/valueId'
    | '/api/spipuniform/admin/attributes/attributeId'
    | '/api/spipuniform/admin/categories/categoryId'
    | '/api/spipuniform/admin/product-types/typeId'
    | '/api/spipuniform/admin/attribute-values'
    | '/api/spipuniform/admin/attributes'
    | '/api/spipuniform/admin/categories'
    | '/api/spipuniform/admin/product-types'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/auth-settings'
    | '/api/avatar'
    | '/api/change-password'
    | '/api/credentials'
    | '/api/files'
    | '/api/me'
    | '/api/test'
    | '/api/user-files'
    | '/api/user-profile'
    | '/api/users-approval'
    | '/api/admin/analytics'
    | '/api/admin/dashboard-stats'
    | '/api/auth-settings/flag'
    | '/api/auth/$'
    | '/api/auth/permissions'
    | '/api/auth/signup-post-hook'
    | '/api/branding/active'
    | '/api/email/fragments'
    | '/api/email/logs'
    | '/api/email/settings'
    | '/api/email/templates'
    | '/api/email/test'
    | '/api/localities/$'
    | '/api/profiles/familyMembers'
    | '/api/profiles/shop'
    | '/api/roles/$roleId'
    | '/api/storage/settings'
    | '/api/users/$userId'
    | '/api/users/actions'
    | '/api/branding'
    | '/api/email'
    | '/api/profiles'
    | '/api/roles'
    | '/api/users'
    | '/api/email/fragments/default'
    | '/api/email/templates/preview'
    | '/api/email/templates/seed-approval'
    | '/api/localities/fetch/$'
    | '/api/profiles/familyMember/$id'
    | '/api/spipuniform/localities/search'
    | '/api/profiles/family-members'
    | '/api/spipuniform/counties'
    | '/api/spipuniform/schools'
    | '/api/spipuniform/admin/attribute-values/valueId'
    | '/api/spipuniform/admin/attributes/attributeId'
    | '/api/spipuniform/admin/categories/categoryId'
    | '/api/spipuniform/admin/product-types/typeId'
    | '/api/spipuniform/admin/attribute-values'
    | '/api/spipuniform/admin/attributes'
    | '/api/spipuniform/admin/categories'
    | '/api/spipuniform/admin/product-types'
  id:
    | '__root__'
    | '/api/auth-settings'
    | '/api/avatar'
    | '/api/change-password'
    | '/api/credentials'
    | '/api/files'
    | '/api/me'
    | '/api/test'
    | '/api/user-files'
    | '/api/user-profile'
    | '/api/users-approval'
    | '/api/admin/analytics'
    | '/api/admin/dashboard-stats'
    | '/api/auth-settings/flag'
    | '/api/auth/$'
    | '/api/auth/permissions'
    | '/api/auth/signup-post-hook'
    | '/api/branding/active'
    | '/api/email/fragments'
    | '/api/email/logs'
    | '/api/email/settings'
    | '/api/email/templates'
    | '/api/email/test'
    | '/api/localities/$'
    | '/api/profiles/familyMembers'
    | '/api/profiles/shop'
    | '/api/roles/$roleId'
    | '/api/storage/settings'
    | '/api/users/$userId'
    | '/api/users/actions'
    | '/api/branding/'
    | '/api/email/'
    | '/api/profiles/'
    | '/api/roles/'
    | '/api/users/'
    | '/api/email/fragments/default'
    | '/api/email/templates/preview'
    | '/api/email/templates/seed-approval'
    | '/api/localities/fetch/$'
    | '/api/profiles/familyMember/$id'
    | '/api/spipuniform/localities/search'
    | '/api/profiles/family-members/'
    | '/api/spipuniform/counties/'
    | '/api/spipuniform/schools/'
    | '/api/spipuniform/admin/attribute-values/valueId'
    | '/api/spipuniform/admin/attributes/attributeId'
    | '/api/spipuniform/admin/categories/categoryId'
    | '/api/spipuniform/admin/product-types/typeId'
    | '/api/spipuniform/admin/attribute-values/'
    | '/api/spipuniform/admin/attributes/'
    | '/api/spipuniform/admin/categories/'
    | '/api/spipuniform/admin/product-types/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSettingsServerRoute: typeof ApiAuthSettingsServerRouteWithChildren
  ApiAvatarServerRoute: typeof ApiAvatarServerRoute
  ApiChangePasswordServerRoute: typeof ApiChangePasswordServerRoute
  ApiCredentialsServerRoute: typeof ApiCredentialsServerRoute
  ApiFilesServerRoute: typeof ApiFilesServerRoute
  ApiMeServerRoute: typeof ApiMeServerRoute
  ApiTestServerRoute: typeof ApiTestServerRoute
  ApiUserFilesServerRoute: typeof ApiUserFilesServerRoute
  ApiUserProfileServerRoute: typeof ApiUserProfileServerRoute
  ApiUsersApprovalServerRoute: typeof ApiUsersApprovalServerRoute
  ApiAdminAnalyticsServerRoute: typeof ApiAdminAnalyticsServerRoute
  ApiAdminDashboardStatsServerRoute: typeof ApiAdminDashboardStatsServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiAuthPermissionsServerRoute: typeof ApiAuthPermissionsServerRoute
  ApiAuthSignupPostHookServerRoute: typeof ApiAuthSignupPostHookServerRoute
  ApiBrandingActiveServerRoute: typeof ApiBrandingActiveServerRoute
  ApiEmailFragmentsServerRoute: typeof ApiEmailFragmentsServerRouteWithChildren
  ApiEmailLogsServerRoute: typeof ApiEmailLogsServerRoute
  ApiEmailSettingsServerRoute: typeof ApiEmailSettingsServerRoute
  ApiEmailTemplatesServerRoute: typeof ApiEmailTemplatesServerRouteWithChildren
  ApiEmailTestServerRoute: typeof ApiEmailTestServerRoute
  ApiLocalitiesSplatServerRoute: typeof ApiLocalitiesSplatServerRoute
  ApiProfilesFamilyMembersServerRoute: typeof ApiProfilesFamilyMembersServerRoute
  ApiProfilesShopServerRoute: typeof ApiProfilesShopServerRoute
  ApiRolesRoleIdServerRoute: typeof ApiRolesRoleIdServerRoute
  ApiStorageSettingsServerRoute: typeof ApiStorageSettingsServerRoute
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
  ApiUsersActionsServerRoute: typeof ApiUsersActionsServerRoute
  ApiBrandingIndexServerRoute: typeof ApiBrandingIndexServerRoute
  ApiEmailIndexServerRoute: typeof ApiEmailIndexServerRoute
  ApiProfilesIndexServerRoute: typeof ApiProfilesIndexServerRoute
  ApiRolesIndexServerRoute: typeof ApiRolesIndexServerRoute
  ApiUsersIndexServerRoute: typeof ApiUsersIndexServerRoute
  ApiLocalitiesFetchSplatServerRoute: typeof ApiLocalitiesFetchSplatServerRoute
  ApiProfilesFamilyMemberIdServerRoute: typeof ApiProfilesFamilyMemberIdServerRoute
  ApiSpipuniformLocalitiesSearchServerRoute: typeof ApiSpipuniformLocalitiesSearchServerRoute
  ApiProfilesFamilyMembersIndexServerRoute: typeof ApiProfilesFamilyMembersIndexServerRoute
  ApiSpipuniformCountiesIndexServerRoute: typeof ApiSpipuniformCountiesIndexServerRoute
  ApiSpipuniformSchoolsIndexServerRoute: typeof ApiSpipuniformSchoolsIndexServerRoute
  ApiSpipuniformAdminAttributeValuesValueIdServerRoute: typeof ApiSpipuniformAdminAttributeValuesValueIdServerRoute
  ApiSpipuniformAdminAttributesAttributeIdServerRoute: typeof ApiSpipuniformAdminAttributesAttributeIdServerRoute
  ApiSpipuniformAdminCategoriesCategoryIdServerRoute: typeof ApiSpipuniformAdminCategoriesCategoryIdServerRoute
  ApiSpipuniformAdminProductTypesTypeIdServerRoute: typeof ApiSpipuniformAdminProductTypesTypeIdServerRoute
  ApiSpipuniformAdminAttributeValuesIndexServerRoute: typeof ApiSpipuniformAdminAttributeValuesIndexServerRoute
  ApiSpipuniformAdminAttributesIndexServerRoute: typeof ApiSpipuniformAdminAttributesIndexServerRoute
  ApiSpipuniformAdminCategoriesIndexServerRoute: typeof ApiSpipuniformAdminCategoriesIndexServerRoute
  ApiSpipuniformAdminProductTypesIndexServerRoute: typeof ApiSpipuniformAdminProductTypesIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/storage-settings': {
      id: '/dashboard/storage-settings'
      path: '/storage-settings'
      fullPath: '/dashboard/storage-settings'
      preLoaderRoute: typeof DashboardStorageSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/file-manager': {
      id: '/dashboard/file-manager'
      path: '/file-manager'
      fullPath: '/dashboard/file-manager'
      preLoaderRoute: typeof DashboardFileManagerRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/email': {
      id: '/dashboard/email'
      path: '/email'
      fullPath: '/dashboard/email'
      preLoaderRoute: typeof DashboardEmailRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/branding': {
      id: '/dashboard/branding'
      path: '/branding'
      fullPath: '/dashboard/branding'
      preLoaderRoute: typeof DashboardBrandingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/pending': {
      id: '/auth/pending'
      path: '/auth/pending'
      fullPath: '/auth/pending'
      preLoaderRoute: typeof AuthPendingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user-management/': {
      id: '/dashboard/user-management/'
      path: '/user-management'
      fullPath: '/dashboard/user-management'
      preLoaderRoute: typeof DashboardUserManagementIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/': {
      id: '/dashboard/spipuniform/'
      path: '/spipuniform'
      fullPath: '/dashboard/spipuniform'
      preLoaderRoute: typeof DashboardSpipuniformIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/': {
      id: '/dashboard/profile/'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/users': {
      id: '/dashboard/user-management/users'
      path: '/user-management/users'
      fullPath: '/dashboard/user-management/users'
      preLoaderRoute: typeof DashboardUserManagementUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/roles': {
      id: '/dashboard/user-management/roles'
      path: '/user-management/roles'
      fullPath: '/dashboard/user-management/roles'
      preLoaderRoute: typeof DashboardUserManagementRolesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/permissions': {
      id: '/dashboard/user-management/permissions'
      path: '/user-management/permissions'
      fullPath: '/dashboard/user-management/permissions'
      preLoaderRoute: typeof DashboardUserManagementPermissionsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-management/consolidated': {
      id: '/dashboard/user-management/consolidated'
      path: '/user-management/consolidated'
      fullPath: '/dashboard/user-management/consolidated'
      preLoaderRoute: typeof DashboardUserManagementConsolidatedRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/data-verification': {
      id: '/dashboard/spipuniform/data-verification'
      path: '/spipuniform/data-verification'
      fullPath: '/dashboard/spipuniform/data-verification'
      preLoaderRoute: typeof DashboardSpipuniformDataVerificationRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/shop': {
      id: '/dashboard/profile/shop'
      path: '/profile/shop'
      fullPath: '/dashboard/profile/shop'
      preLoaderRoute: typeof DashboardProfileShopRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/profile/family': {
      id: '/dashboard/profile/family'
      path: '/profile/family'
      fullPath: '/dashboard/profile/family'
      preLoaderRoute: typeof DashboardProfileFamilyRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/types': {
      id: '/dashboard/spipuniform/products/types'
      path: '/spipuniform/products/types'
      fullPath: '/dashboard/spipuniform/products/types'
      preLoaderRoute: typeof DashboardSpipuniformProductsTypesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/conditions': {
      id: '/dashboard/spipuniform/products/conditions'
      path: '/spipuniform/products/conditions'
      fullPath: '/dashboard/spipuniform/products/conditions'
      preLoaderRoute: typeof DashboardSpipuniformProductsConditionsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/categories': {
      id: '/dashboard/spipuniform/products/categories'
      path: '/spipuniform/products/categories'
      fullPath: '/dashboard/spipuniform/products/categories'
      preLoaderRoute: typeof DashboardSpipuniformProductsCategoriesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/spipuniform/products/attributes': {
      id: '/dashboard/spipuniform/products/attributes'
      path: '/spipuniform/products/attributes'
      fullPath: '/dashboard/spipuniform/products/attributes'
      preLoaderRoute: typeof DashboardSpipuniformProductsAttributesRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/users-approval': {
      id: '/api/users-approval'
      path: '/api/users-approval'
      fullPath: '/api/users-approval'
      preLoaderRoute: typeof ApiUsersApprovalServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/user-profile': {
      id: '/api/user-profile'
      path: '/api/user-profile'
      fullPath: '/api/user-profile'
      preLoaderRoute: typeof ApiUserProfileServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/user-files': {
      id: '/api/user-files'
      path: '/api/user-files'
      fullPath: '/api/user-files'
      preLoaderRoute: typeof ApiUserFilesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/test': {
      id: '/api/test'
      path: '/api/test'
      fullPath: '/api/test'
      preLoaderRoute: typeof ApiTestServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/me': {
      id: '/api/me'
      path: '/api/me'
      fullPath: '/api/me'
      preLoaderRoute: typeof ApiMeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/files': {
      id: '/api/files'
      path: '/api/files'
      fullPath: '/api/files'
      preLoaderRoute: typeof ApiFilesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/credentials': {
      id: '/api/credentials'
      path: '/api/credentials'
      fullPath: '/api/credentials'
      preLoaderRoute: typeof ApiCredentialsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/change-password': {
      id: '/api/change-password'
      path: '/api/change-password'
      fullPath: '/api/change-password'
      preLoaderRoute: typeof ApiChangePasswordServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatar': {
      id: '/api/avatar'
      path: '/api/avatar'
      fullPath: '/api/avatar'
      preLoaderRoute: typeof ApiAvatarServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth-settings': {
      id: '/api/auth-settings'
      path: '/api/auth-settings'
      fullPath: '/api/auth-settings'
      preLoaderRoute: typeof ApiAuthSettingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/': {
      id: '/api/users/'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/roles/': {
      id: '/api/roles/'
      path: '/api/roles'
      fullPath: '/api/roles'
      preLoaderRoute: typeof ApiRolesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/profiles/': {
      id: '/api/profiles/'
      path: '/api/profiles'
      fullPath: '/api/profiles'
      preLoaderRoute: typeof ApiProfilesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/': {
      id: '/api/email/'
      path: '/api/email'
      fullPath: '/api/email'
      preLoaderRoute: typeof ApiEmailIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/branding/': {
      id: '/api/branding/'
      path: '/api/branding'
      fullPath: '/api/branding'
      preLoaderRoute: typeof ApiBrandingIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/actions': {
      id: '/api/users/actions'
      path: '/api/users/actions'
      fullPath: '/api/users/actions'
      preLoaderRoute: typeof ApiUsersActionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/api/users/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/storage/settings': {
      id: '/api/storage/settings'
      path: '/api/storage/settings'
      fullPath: '/api/storage/settings'
      preLoaderRoute: typeof ApiStorageSettingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/roles/$roleId': {
      id: '/api/roles/$roleId'
      path: '/api/roles/$roleId'
      fullPath: '/api/roles/$roleId'
      preLoaderRoute: typeof ApiRolesRoleIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/profiles/shop': {
      id: '/api/profiles/shop'
      path: '/api/profiles/shop'
      fullPath: '/api/profiles/shop'
      preLoaderRoute: typeof ApiProfilesShopServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/profiles/familyMembers': {
      id: '/api/profiles/familyMembers'
      path: '/api/profiles/familyMembers'
      fullPath: '/api/profiles/familyMembers'
      preLoaderRoute: typeof ApiProfilesFamilyMembersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/localities/$': {
      id: '/api/localities/$'
      path: '/api/localities/$'
      fullPath: '/api/localities/$'
      preLoaderRoute: typeof ApiLocalitiesSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/test': {
      id: '/api/email/test'
      path: '/api/email/test'
      fullPath: '/api/email/test'
      preLoaderRoute: typeof ApiEmailTestServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/templates': {
      id: '/api/email/templates'
      path: '/api/email/templates'
      fullPath: '/api/email/templates'
      preLoaderRoute: typeof ApiEmailTemplatesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/settings': {
      id: '/api/email/settings'
      path: '/api/email/settings'
      fullPath: '/api/email/settings'
      preLoaderRoute: typeof ApiEmailSettingsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/logs': {
      id: '/api/email/logs'
      path: '/api/email/logs'
      fullPath: '/api/email/logs'
      preLoaderRoute: typeof ApiEmailLogsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/fragments': {
      id: '/api/email/fragments'
      path: '/api/email/fragments'
      fullPath: '/api/email/fragments'
      preLoaderRoute: typeof ApiEmailFragmentsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/branding/active': {
      id: '/api/branding/active'
      path: '/api/branding/active'
      fullPath: '/api/branding/active'
      preLoaderRoute: typeof ApiBrandingActiveServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/signup-post-hook': {
      id: '/api/auth/signup-post-hook'
      path: '/api/auth/signup-post-hook'
      fullPath: '/api/auth/signup-post-hook'
      preLoaderRoute: typeof ApiAuthSignupPostHookServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/permissions': {
      id: '/api/auth/permissions'
      path: '/api/auth/permissions'
      fullPath: '/api/auth/permissions'
      preLoaderRoute: typeof ApiAuthPermissionsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth-settings/flag': {
      id: '/api/auth-settings/flag'
      path: '/flag'
      fullPath: '/api/auth-settings/flag'
      preLoaderRoute: typeof ApiAuthSettingsFlagServerRouteImport
      parentRoute: typeof ApiAuthSettingsServerRoute
    }
    '/api/admin/dashboard-stats': {
      id: '/api/admin/dashboard-stats'
      path: '/api/admin/dashboard-stats'
      fullPath: '/api/admin/dashboard-stats'
      preLoaderRoute: typeof ApiAdminDashboardStatsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/analytics': {
      id: '/api/admin/analytics'
      path: '/api/admin/analytics'
      fullPath: '/api/admin/analytics'
      preLoaderRoute: typeof ApiAdminAnalyticsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/schools/': {
      id: '/api/spipuniform/schools/'
      path: '/api/spipuniform/schools'
      fullPath: '/api/spipuniform/schools'
      preLoaderRoute: typeof ApiSpipuniformSchoolsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/counties/': {
      id: '/api/spipuniform/counties/'
      path: '/api/spipuniform/counties'
      fullPath: '/api/spipuniform/counties'
      preLoaderRoute: typeof ApiSpipuniformCountiesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/profiles/family-members/': {
      id: '/api/profiles/family-members/'
      path: '/api/profiles/family-members'
      fullPath: '/api/profiles/family-members'
      preLoaderRoute: typeof ApiProfilesFamilyMembersIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/localities/search': {
      id: '/api/spipuniform/localities/search'
      path: '/api/spipuniform/localities/search'
      fullPath: '/api/spipuniform/localities/search'
      preLoaderRoute: typeof ApiSpipuniformLocalitiesSearchServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/profiles/familyMember/$id': {
      id: '/api/profiles/familyMember/$id'
      path: '/api/profiles/familyMember/$id'
      fullPath: '/api/profiles/familyMember/$id'
      preLoaderRoute: typeof ApiProfilesFamilyMemberIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/localities/fetch/$': {
      id: '/api/localities/fetch/$'
      path: '/api/localities/fetch/$'
      fullPath: '/api/localities/fetch/$'
      preLoaderRoute: typeof ApiLocalitiesFetchSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/email/templates/seed-approval': {
      id: '/api/email/templates/seed-approval'
      path: '/seed-approval'
      fullPath: '/api/email/templates/seed-approval'
      preLoaderRoute: typeof ApiEmailTemplatesSeedApprovalServerRouteImport
      parentRoute: typeof ApiEmailTemplatesServerRoute
    }
    '/api/email/templates/preview': {
      id: '/api/email/templates/preview'
      path: '/preview'
      fullPath: '/api/email/templates/preview'
      preLoaderRoute: typeof ApiEmailTemplatesPreviewServerRouteImport
      parentRoute: typeof ApiEmailTemplatesServerRoute
    }
    '/api/email/fragments/default': {
      id: '/api/email/fragments/default'
      path: '/default'
      fullPath: '/api/email/fragments/default'
      preLoaderRoute: typeof ApiEmailFragmentsDefaultServerRouteImport
      parentRoute: typeof ApiEmailFragmentsServerRoute
    }
    '/api/spipuniform/admin/product-types/': {
      id: '/api/spipuniform/admin/product-types/'
      path: '/api/spipuniform/admin/product-types'
      fullPath: '/api/spipuniform/admin/product-types'
      preLoaderRoute: typeof ApiSpipuniformAdminProductTypesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/categories/': {
      id: '/api/spipuniform/admin/categories/'
      path: '/api/spipuniform/admin/categories'
      fullPath: '/api/spipuniform/admin/categories'
      preLoaderRoute: typeof ApiSpipuniformAdminCategoriesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attributes/': {
      id: '/api/spipuniform/admin/attributes/'
      path: '/api/spipuniform/admin/attributes'
      fullPath: '/api/spipuniform/admin/attributes'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attribute-values/': {
      id: '/api/spipuniform/admin/attribute-values/'
      path: '/api/spipuniform/admin/attribute-values'
      fullPath: '/api/spipuniform/admin/attribute-values'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributeValuesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/product-types/typeId': {
      id: '/api/spipuniform/admin/product-types/typeId'
      path: '/api/spipuniform/admin/product-types/typeId'
      fullPath: '/api/spipuniform/admin/product-types/typeId'
      preLoaderRoute: typeof ApiSpipuniformAdminProductTypesTypeIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/categories/categoryId': {
      id: '/api/spipuniform/admin/categories/categoryId'
      path: '/api/spipuniform/admin/categories/categoryId'
      fullPath: '/api/spipuniform/admin/categories/categoryId'
      preLoaderRoute: typeof ApiSpipuniformAdminCategoriesCategoryIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attributes/attributeId': {
      id: '/api/spipuniform/admin/attributes/attributeId'
      path: '/api/spipuniform/admin/attributes/attributeId'
      fullPath: '/api/spipuniform/admin/attributes/attributeId'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributesAttributeIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/spipuniform/admin/attribute-values/valueId': {
      id: '/api/spipuniform/admin/attribute-values/valueId'
      path: '/api/spipuniform/admin/attribute-values/valueId'
      fullPath: '/api/spipuniform/admin/attribute-values/valueId'
      preLoaderRoute: typeof ApiSpipuniformAdminAttributeValuesValueIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardBrandingRoute: typeof DashboardBrandingRoute
  DashboardEmailRoute: typeof DashboardEmailRoute
  DashboardFileManagerRoute: typeof DashboardFileManagerRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardStorageSettingsRoute: typeof DashboardStorageSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProfileFamilyRoute: typeof DashboardProfileFamilyRoute
  DashboardProfileShopRoute: typeof DashboardProfileShopRoute
  DashboardSpipuniformDataVerificationRoute: typeof DashboardSpipuniformDataVerificationRoute
  DashboardUserManagementConsolidatedRoute: typeof DashboardUserManagementConsolidatedRoute
  DashboardUserManagementPermissionsRoute: typeof DashboardUserManagementPermissionsRoute
  DashboardUserManagementRolesRoute: typeof DashboardUserManagementRolesRoute
  DashboardUserManagementUsersRoute: typeof DashboardUserManagementUsersRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
  DashboardSpipuniformIndexRoute: typeof DashboardSpipuniformIndexRoute
  DashboardUserManagementIndexRoute: typeof DashboardUserManagementIndexRoute
  DashboardSpipuniformProductsAttributesRoute: typeof DashboardSpipuniformProductsAttributesRoute
  DashboardSpipuniformProductsCategoriesRoute: typeof DashboardSpipuniformProductsCategoriesRoute
  DashboardSpipuniformProductsConditionsRoute: typeof DashboardSpipuniformProductsConditionsRoute
  DashboardSpipuniformProductsTypesRoute: typeof DashboardSpipuniformProductsTypesRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardBrandingRoute: DashboardBrandingRoute,
  DashboardEmailRoute: DashboardEmailRoute,
  DashboardFileManagerRoute: DashboardFileManagerRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardStorageSettingsRoute: DashboardStorageSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProfileFamilyRoute: DashboardProfileFamilyRoute,
  DashboardProfileShopRoute: DashboardProfileShopRoute,
  DashboardSpipuniformDataVerificationRoute:
    DashboardSpipuniformDataVerificationRoute,
  DashboardUserManagementConsolidatedRoute:
    DashboardUserManagementConsolidatedRoute,
  DashboardUserManagementPermissionsRoute:
    DashboardUserManagementPermissionsRoute,
  DashboardUserManagementRolesRoute: DashboardUserManagementRolesRoute,
  DashboardUserManagementUsersRoute: DashboardUserManagementUsersRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
  DashboardSpipuniformIndexRoute: DashboardSpipuniformIndexRoute,
  DashboardUserManagementIndexRoute: DashboardUserManagementIndexRoute,
  DashboardSpipuniformProductsAttributesRoute:
    DashboardSpipuniformProductsAttributesRoute,
  DashboardSpipuniformProductsCategoriesRoute:
    DashboardSpipuniformProductsCategoriesRoute,
  DashboardSpipuniformProductsConditionsRoute:
    DashboardSpipuniformProductsConditionsRoute,
  DashboardSpipuniformProductsTypesRoute:
    DashboardSpipuniformProductsTypesRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface ApiAuthSettingsServerRouteChildren {
  ApiAuthSettingsFlagServerRoute: typeof ApiAuthSettingsFlagServerRoute
}

const ApiAuthSettingsServerRouteChildren: ApiAuthSettingsServerRouteChildren = {
  ApiAuthSettingsFlagServerRoute: ApiAuthSettingsFlagServerRoute,
}

const ApiAuthSettingsServerRouteWithChildren =
  ApiAuthSettingsServerRoute._addFileChildren(
    ApiAuthSettingsServerRouteChildren,
  )

interface ApiEmailFragmentsServerRouteChildren {
  ApiEmailFragmentsDefaultServerRoute: typeof ApiEmailFragmentsDefaultServerRoute
}

const ApiEmailFragmentsServerRouteChildren: ApiEmailFragmentsServerRouteChildren =
  {
    ApiEmailFragmentsDefaultServerRoute: ApiEmailFragmentsDefaultServerRoute,
  }

const ApiEmailFragmentsServerRouteWithChildren =
  ApiEmailFragmentsServerRoute._addFileChildren(
    ApiEmailFragmentsServerRouteChildren,
  )

interface ApiEmailTemplatesServerRouteChildren {
  ApiEmailTemplatesPreviewServerRoute: typeof ApiEmailTemplatesPreviewServerRoute
  ApiEmailTemplatesSeedApprovalServerRoute: typeof ApiEmailTemplatesSeedApprovalServerRoute
}

const ApiEmailTemplatesServerRouteChildren: ApiEmailTemplatesServerRouteChildren =
  {
    ApiEmailTemplatesPreviewServerRoute: ApiEmailTemplatesPreviewServerRoute,
    ApiEmailTemplatesSeedApprovalServerRoute:
      ApiEmailTemplatesSeedApprovalServerRoute,
  }

const ApiEmailTemplatesServerRouteWithChildren =
  ApiEmailTemplatesServerRoute._addFileChildren(
    ApiEmailTemplatesServerRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthPendingRoute: AuthPendingRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSettingsServerRoute: ApiAuthSettingsServerRouteWithChildren,
  ApiAvatarServerRoute: ApiAvatarServerRoute,
  ApiChangePasswordServerRoute: ApiChangePasswordServerRoute,
  ApiCredentialsServerRoute: ApiCredentialsServerRoute,
  ApiFilesServerRoute: ApiFilesServerRoute,
  ApiMeServerRoute: ApiMeServerRoute,
  ApiTestServerRoute: ApiTestServerRoute,
  ApiUserFilesServerRoute: ApiUserFilesServerRoute,
  ApiUserProfileServerRoute: ApiUserProfileServerRoute,
  ApiUsersApprovalServerRoute: ApiUsersApprovalServerRoute,
  ApiAdminAnalyticsServerRoute: ApiAdminAnalyticsServerRoute,
  ApiAdminDashboardStatsServerRoute: ApiAdminDashboardStatsServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiAuthPermissionsServerRoute: ApiAuthPermissionsServerRoute,
  ApiAuthSignupPostHookServerRoute: ApiAuthSignupPostHookServerRoute,
  ApiBrandingActiveServerRoute: ApiBrandingActiveServerRoute,
  ApiEmailFragmentsServerRoute: ApiEmailFragmentsServerRouteWithChildren,
  ApiEmailLogsServerRoute: ApiEmailLogsServerRoute,
  ApiEmailSettingsServerRoute: ApiEmailSettingsServerRoute,
  ApiEmailTemplatesServerRoute: ApiEmailTemplatesServerRouteWithChildren,
  ApiEmailTestServerRoute: ApiEmailTestServerRoute,
  ApiLocalitiesSplatServerRoute: ApiLocalitiesSplatServerRoute,
  ApiProfilesFamilyMembersServerRoute: ApiProfilesFamilyMembersServerRoute,
  ApiProfilesShopServerRoute: ApiProfilesShopServerRoute,
  ApiRolesRoleIdServerRoute: ApiRolesRoleIdServerRoute,
  ApiStorageSettingsServerRoute: ApiStorageSettingsServerRoute,
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
  ApiUsersActionsServerRoute: ApiUsersActionsServerRoute,
  ApiBrandingIndexServerRoute: ApiBrandingIndexServerRoute,
  ApiEmailIndexServerRoute: ApiEmailIndexServerRoute,
  ApiProfilesIndexServerRoute: ApiProfilesIndexServerRoute,
  ApiRolesIndexServerRoute: ApiRolesIndexServerRoute,
  ApiUsersIndexServerRoute: ApiUsersIndexServerRoute,
  ApiLocalitiesFetchSplatServerRoute: ApiLocalitiesFetchSplatServerRoute,
  ApiProfilesFamilyMemberIdServerRoute: ApiProfilesFamilyMemberIdServerRoute,
  ApiSpipuniformLocalitiesSearchServerRoute:
    ApiSpipuniformLocalitiesSearchServerRoute,
  ApiProfilesFamilyMembersIndexServerRoute:
    ApiProfilesFamilyMembersIndexServerRoute,
  ApiSpipuniformCountiesIndexServerRoute:
    ApiSpipuniformCountiesIndexServerRoute,
  ApiSpipuniformSchoolsIndexServerRoute: ApiSpipuniformSchoolsIndexServerRoute,
  ApiSpipuniformAdminAttributeValuesValueIdServerRoute:
    ApiSpipuniformAdminAttributeValuesValueIdServerRoute,
  ApiSpipuniformAdminAttributesAttributeIdServerRoute:
    ApiSpipuniformAdminAttributesAttributeIdServerRoute,
  ApiSpipuniformAdminCategoriesCategoryIdServerRoute:
    ApiSpipuniformAdminCategoriesCategoryIdServerRoute,
  ApiSpipuniformAdminProductTypesTypeIdServerRoute:
    ApiSpipuniformAdminProductTypesTypeIdServerRoute,
  ApiSpipuniformAdminAttributeValuesIndexServerRoute:
    ApiSpipuniformAdminAttributeValuesIndexServerRoute,
  ApiSpipuniformAdminAttributesIndexServerRoute:
    ApiSpipuniformAdminAttributesIndexServerRoute,
  ApiSpipuniformAdminCategoriesIndexServerRoute:
    ApiSpipuniformAdminCategoriesIndexServerRoute,
  ApiSpipuniformAdminProductTypesIndexServerRoute:
    ApiSpipuniformAdminProductTypesIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
